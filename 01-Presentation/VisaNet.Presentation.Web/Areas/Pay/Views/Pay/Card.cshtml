@using System.Globalization
@using System.Configuration
@using VisaNet.Common.Resource.Presentation
@using VisaNet.Domain.EntitiesDtos
@using VisaNet.Domain.EntitiesDtos.Enums
@model VisaNet.Presentation.Web.Models.CardModel

@{
    Layout = "~/Views/Shared/_LayoutWithoutAnalytics.cshtml"; //no Google Analytics
}
<div class="container p25t">
    <div class="row">
        <div class="col-md-12">
            <h3 class="mt5 mb20 nameSection">@PresentationWebStrings.Header_UniquePayment</h3>
            <h4 class="pageDescription">@PresentationWebStrings.Payment_Desc</h4>
        </div>
    </div>   

    <div class="wizardBox">
        <!-- area de titulo y breadcrumb-->
        <div class="row">
            <div class="col-md-8">
                <h3 class="mt5">@PresentationWebStrings.Payment_Step3 </h3>
                <h4 class="pageDescription">@PresentationWebStrings.Payment_Step3_Description </h4>
            </div>
            <div class="col-md-4">
                @Html.Partial("_Steps")
            </div>
            <div class="clearfix"></div>
            <div class="horizontalLineGrey"></div>
        </div>

        <!-- area de datos seleccionados -->
        <div class="highlightArea">
            <h3><i class="icon-angle-right"></i>@PresentationWebStrings.Payment_Data_SoFar</h3>
            <label><i class="icon-angle-right lightBlue"></i> @PresentationWebStrings.Payment_Service <span>@ViewBag.Service</span></label>
            @if (!String.IsNullOrEmpty(ViewBag.ReferenceName) && !String.IsNullOrEmpty(ViewBag.ReferenceValue))
            {
                <label><i class="icon-angle-right lightBlue"></i> @ViewBag.ReferenceName: <span>@ViewBag.ReferenceValue</span></label>
            }
            @if (!String.IsNullOrEmpty(ViewBag.ReferenceName2) && !String.IsNullOrEmpty(ViewBag.ReferenceValue2))
            {
                <label><i class="icon-angle-right lightBlue"></i> @ViewBag.ReferenceName2: <span>@ViewBag.ReferenceValue2</span></label>
            }
            @if (!String.IsNullOrEmpty(ViewBag.ReferenceName3) && !String.IsNullOrEmpty(ViewBag.ReferenceValue3))
            {
                <label><i class="icon-angle-right lightBlue"></i> @ViewBag.ReferenceName3: <span>@ViewBag.ReferenceValue3</span></label>
            }
            @if (!String.IsNullOrEmpty(ViewBag.ReferenceName4) && !String.IsNullOrEmpty(ViewBag.ReferenceValue4))
            {
                <label><i class="icon-angle-right lightBlue"></i> @ViewBag.ReferenceName4: <span>@ViewBag.ReferenceValue4</span></label>
            }
            @if (!String.IsNullOrEmpty(ViewBag.ReferenceName5) && !String.IsNullOrEmpty(ViewBag.ReferenceValue5))
            {
                <label><i class="icon-angle-right lightBlue"></i> @ViewBag.ReferenceName5: <span>@ViewBag.ReferenceValue5</span></label>
            }
            @if (!String.IsNullOrEmpty(ViewBag.ReferenceName6) && !String.IsNullOrEmpty(ViewBag.ReferenceValue6))
            {
                <label><i class="icon-angle-right lightBlue"></i> @ViewBag.ReferenceName6: <span>@ViewBag.ReferenceValue6</span></label>
            }
            @if (ViewBag.TotalDolars != null && Math.Abs(((double)ViewBag.TotalDolars)) > 0.0)
            {
                <label>
                    <i class="icon-angle-right lightBlue"></i> @PresentationWebStrings.Payment_TotalDolars
                    <span>
                        U$D @ViewBag.TotalDolars.ToString("##,#0.00", CultureInfo.CurrentCulture)
                        @if (Model.Bills != null && Model.Bills.Any() && Model.Bills.FirstOrDefault().Bills != null && Model.Bills.FirstOrDefault().Bills.Any())
                        {
                            <a id="@Model.Bills.FirstOrDefault().Id" href="#" class="billdetail visaTextBlue">(+)</a>
                        }
                    </span>
                </label>
            }
            @if (ViewBag.TotalPesos != null && Math.Abs(((double)ViewBag.TotalPesos)) > 0.0)
            {
                <label>
                    <i class="icon-angle-right lightBlue"></i> @PresentationWebStrings.Payment_TotalPesos
                    <span>
                        $ @ViewBag.TotalPesos.ToString("##,#0.00", CultureInfo.CurrentCulture)
                        @if (Model.Bills != null && Model.Bills.Any() && Model.Bills.FirstOrDefault().Bills != null && Model.Bills.FirstOrDefault().Bills.Any())
                        {
                            <a id="@Model.Bills.FirstOrDefault().Id" href="#" class="billdetail visaTextBlue">(+)</a>
                        }
                    </span>
                </label>
            }
        </div>

        <div class="formMargin">
            <div class="row">
                <div class="col-md-12 hide generalError" id="cardNotSelected">
                    <i class="icon-warning-sign"></i>
                    @PresentationWebStrings.Form_Error_SelectCard
                </div>
            </div>
        </div>

        <!--fin del area de datos seleccionados -->
        <form id="payment_with_token_confirmation" method="POST" action="@ConfigurationManager.AppSettings["CybersourceFormUrl"]silent/pay">
            <div id="keysWithToken">

            </div>
            @if (((ICollection<CardDto>)ViewBag.Cards).Count > 0)
            {
                <!-- area de seleccion de tarjetas ingresadas con anterioridad -->
                <div id="cards" class="highlightAreaCards">
                    <div class="row selectCreditCard">
                        <h3><i class="icon-credit-card"></i> @PresentationWebStrings.Payment_CardAssociated_Message</h3>
                        @{ int i = 0; }
                        @foreach (var card in (ICollection<CardDto>)ViewBag.Cards)
                        {
                            var optChecked = string.Empty;
                            if (ViewBag.DefaultCardId != null && card.Id == (Guid)ViewBag.DefaultCardId && card.State == CardStateDto.Active)
                            { optChecked = "selected"; }
                            else if (ViewBag.DefaultCardId == null && i == 0 && card.State == CardStateDto.Active)
                            { optChecked = "selected"; }

                            <div class="col-lg-3 col-lg-offset-0 col-md-4 col-md-offset-0 col-sm-6 col-sm-offset-0 col-xs-offset-0 col-xs-12">
                                @*<input name="Id" class="cardsRadio" value="@card.Id" type="radio" data-type="existingCard" @optChecked />
                                    <label> @card.MaskedNumber</label>*@
                                <a href="#">
                                    <div class="card @optChecked @card.State.ToString()" data-cardid="@card.Id" data-type="existingCard">
                                        <p class="mask"><span>@card.MaskedNumber.Substring(0, 4)</span> <span>@card.MaskedNumber.Substring(4, 4)</span> <span>@card.MaskedNumber.Substring(8, 4)</span> <span>@card.MaskedNumber.Substring(12, 4)</span></p>
                                        @if (!string.IsNullOrEmpty(card.Description))
                                        {
                                            var desc = card.Description.Length > 36 ? card.Description.Substring(0, 32) + " ..." : card.Description;
                                            <p class="vencimiento">@desc</p>
                                        }
                                        <p class="vencimiento">Vencimiento: @card.DueDate.ToString("MM/yyyy")</p>
                                        <input type="hidden" value="@card.Id" />
                                        <img src="@Url.Content("~/Content/images/check.png")" class="check _hide">
                                        <span id="CanNotBeAssociated">No se puede seleccionar</span>
                                        <span id="Expired">Vencida</span>
                                    </div>
                                </a>
                            </div>
                            i++;
                        }

                        <div class="col-lg-3 col-lg-offset-0 col-md-4 col-md-offset-0 col-sm-6 col-sm-offset-0 col-xs-offset-0 col-xs-12">
                            <a href="#">
                                <div class="card agregar" id="newCard">
                                    <p class="add">
                                        Agregar otra tarjeta
                                    </p>
                                </div>
                            </a>
                        </div>
                        @*<input id="newCard" name="Id" type="radio"/>
                            <label>@PresentationWebStrings.Payment_New_Card</label>*@
                    </div>
                </div>
                <!-- area de seleccion de tarjetas ingresadas con anterioridad -->
            }
        </form>

        <form id="payment_confirmation" method="POST" action="@ConfigurationManager.AppSettings["CybersourceFormUrl"]silent/pay">

            <div id="cybersourceKeys"></div>

            <div id="newCardForm" class="@(((ICollection<CardDto>)ViewBag.Cards).Count > 0 ? "hide" : "")">
                <!-- campos obligatorios -->
                <h5><i class="icon-exclamation-sign visanetOrangeTxt"></i> @PresentationWebStrings.Required_First_Line <i class="icon-asterisk visanetOrangeTxt obligatoryField"></i>@PresentationWebStrings.Required_Second_Line</h5>
                <!-- campos obligatorios -->

                <div class="formMargin">
                    <div class="row">
                        <div class="col-md-12 hide generalError" id="generalError">
                            <i class="icon-warning-sign"></i>
                            @PresentationWebStrings.From_General_Error
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.Name)<i class="icon-asterisk visanetOrangeTxt obligatoryField"></i>
                            @Html.TextBoxFor(m => m.Name, new { @id = "Name", @class = "w100", placeholder = PresentationWebStrings.Payment_Card_Name, autocomplete = "off" })
                            @Html.ValidationMessageFor(m => m.Name)
                            <span id="NameRequired" class="hide help-inline field-validation-error">@PresentationCoreMessages.RequiredField</span>
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.Number)<i class="icon-asterisk visanetOrangeTxt obligatoryField"></i>
                            <input type="text" name="card_number" id="card_number" class="w100 numeric" maxlength="16" placeholder="@PresentationWebStrings.Service_Step3_Card_Number_Placeholder" autocomplete="off" />
                            <input type="hidden" name="card_type" id="card_type" value="001" />
                            @Html.ValidationMessageFor(m => m.Number)
                            <span id="NumberInvalid" class="hide help-inline field-validation-error">@PresentationWebStrings.Card_Number_Invalid</span>
                            <h5 class="helpUser"><i class="icon-info-sign"></i><a class="Card_Number_Where"> @PresentationWebStrings.Payment_Card_Number_Info</a></h5>
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.SecurityCode)<i class="icon-asterisk visanetOrangeTxt obligatoryField"></i>
                            <input type="password" name="card_cvn" id="card_cvn" class="w100 numeric" maxlength="4" placeholder="@PresentationWebStrings.Payment_Card_SecurityCode" autocomplete="off" />
                            @Html.ValidationMessageFor(m => m.SecurityCode)
                            <span id="SecurityCodeInvalid" class="hide help-inline field-validation-error">@PresentationWebStrings.Card_CVNCheckInvalid</span>
                            <h5 class="helpUser"><i class="icon-info-sign"></i><a class="Card_Code_Where" data-image-url="@Url.Content("~/Content/images/CVN.png")"> @PresentationWebStrings.Payment_Card_SecurityCode_Info</a></h5>
                        </div>

                        <div class='col-md-6'>
                            @Html.LabelFor(m => m.DueDate)<i class="icon-asterisk visanetOrangeTxt obligatoryField"></i>
                            <div class="creditCardsFix">
                                <div class="col-xs-6 p5r pl0"><div class="selectMask w100">@Html.DropDownList("ddlMonth", Enumerable.Range(1, 12).Select(i => new SelectListItem { Text = i.ToString("00"), Value = i.ToString("00") }), new { @class = "w100" })</div></div>
                                <div class="col-xs-6 p5l pr0"><div class="selectMask w100">@Html.DropDownList("ddlYear", new SelectList(Enumerable.Range(DateTime.Now.Year, 25)), new { @class = "w100" })</div></div>
                                @Html.Hidden("card_expiry_date")
                                @Html.ValidationMessageFor(m => m.DueDate)
                            </div>
                            <h5 class="helpUser" style="margin-top: 49px"><i class="icon-info-sign"></i><a class="Card_DueDate_Info"> @PresentationWebStrings.Payment_Card_DueDate_Info</a></h5>
                        </div>

                    </div>
                </div>

                <!-- fin del formMargin-->
            </div>
            <div class="row wizardButtons">
                <div class="col-md-8"></div>
                <div class="col-md-4">
                    <div class="col-xs-6 p5r pl0">
                        @if (!String.IsNullOrEmpty(ViewBag.ReturnButton))
                        {
                            <a href="@Url.Action("Bills")" class="btn btn-default btn-anterior mt10 w100"><i class="icon-chevron-sign-left"></i> @PresentationCoreMessages.Common_Previous_Bills</a>
                        }
                        else
                        {
                            <a href="@Url.Action("Bills")" class="btn btn-default btn-anterior mt10 w100"><i class="icon-chevron-sign-left"></i> @PresentationCoreMessages.Common_Previous</a>
                        }
                    </div>
                    <div class="col-xs-6 p5l pr0">
                        <button id="btnNext" class="btn btn-default btn-siguiente mt10 w100"> @PresentationWebStrings.Payment_Pay </button>
                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>
        </form>
    </div>
    <div class="row">
        <div class="col-md-2">
            <button id="btnCancelPayment" class="btn btn-default btn-cancelar mt10 w100">@PresentationWebStrings.Payment_Cancel<i class="icon-remove"></i></button>
        </div>
    </div>

    @Html.Partial("_Confirm")
    @Html.Partial("_Cancel")
    <div id="billDetail"></div>
</div>

<script type="text/javascript">
    var fpProfiler = cybs_dfprofiler("@ViewBag.MerchantId", "@ViewBag.CsEnvironment", "@ConfigurationManager.AppSettings["CsFingerprintRedirectUrl"]");

    $(document).ready(function () {
        $("#stepCard").addClass("active");
        $("#paymentRequestLink").addClass("vnpTitleSelected");

        $("#card_cvn").blur(function (e) {
            e.preventDefault();
            if (validateCardCVV($("#card_cvn").val())) {
                $("#SecurityCodeInvalid").addClass("hide");
            } else {
                $("#SecurityCodeInvalid").removeClass("hide");
            }
        });

        if ($("#newCardForm").hasClass("hide")) {
            var selected = $("input[class=cardsRadio]:checked");
            $.ajax({
                type: "POST",
                url: '@Url.Action("LoadKeysWithTokenAjax", "Pay", new { Area = "Pay" })',
                data: "cardId=" + selected.val() + "&fpProfiler=" + fpProfiler,
                dataType: 'json',
                success: function (data) {
                    if (data.ResponseType == RESPONSE.SUCCESS) {
                        $("#lblPaymentService").html(data.Content.Service);
                        $("#lblPaymentTotalBills").html(data.Content.Currency + ' ' + data.Content.TotalAmount);

                        if (data.Content.Discount == "0,00") {
                            $("#discountrowid").addClass("hide");
                        } else {
                            $("#discountrowid").removeClass("hide");
                            $("#lblPaymentDiscountAmount").html(data.Content.Currency + ' ' + data.Content.Discount);
                            $("#lblPaymentDiscountType").html(data.Content.DiscountType);
                            //$("#lblPaymentFinancialInclusion").html(data.Content.Currency + ' ' + data.Content.Discount);
                        }

                        $("#lblPaymentTotalAfterDiscount").html(data.Content.Currency + ' ' + data.Content.TotalAfterDiscount);
                        $('#keysWithToken').html(data.Content.keys);
                        $("#btnNext").removeClass("hide");
                    }
                    if (data.ResponseType == RESPONSE.ERROR) {
                        ShowNotification(data.Title, data.Message, 'error');
                        $("#btnNext").addClass("hide");
                    }
                    if (data.ResponseType == 2) {
                        ShowNotification(data.Title, data.Message, 'info');
                        $("#btnNext").addClass("hide");
                    }
                }
            });
        }

        $("[data-type=existingCard]").click(function () {
            $("#newCardForm").addClass("hide");
            $("#cardNotSelected").addClass("hide");
        });

        $("#newCard").click(function () {
            $("#newCardForm").removeClass("hide");
            $("#cardNotSelected").addClass("hide");
            $("#btnNext").removeClass("hide");
            updateSelectedCard($(this));
        });

        $("#card_number").blur(function (e) {
            e.preventDefault();

            var cardNumber = $("#card_number").val();
            if (!validateCardNumber(cardNumber)) {
                $("#NumberInvalid").removeClass("hide");
            } else {
                $("#NumberInvalid").addClass("hide");
            }
        });

        $("#Name").blur(function (e) {
            e.preventDefault();

            var name = $("#Name").val();
            if (name == "") {
                $("#NameRequired").removeClass("hide");
                $("#Name").addClass("input-validation-error");
            } else {
                $("#NameRequired").addClass("hide");
            }
        });

        $("#btnNext").click(function (e) {
            e.preventDefault();

            if ($("#newCardForm").hasClass("hide")) {
                var value = $('a div.card.selected', '#payment_with_token_confirmation').attr('data-cardId');
                if (value != undefined) {
                    calculateDiscount();
                } else {
                    CardNotSelected();
                }
            }
            else {
                if ($("#Name").val() != "" && $("#card_number").val() != "" && $("#NumberInvalid").hasClass("hide") && validateCardCVV($("#card_cvn").val())) {
                    //Envio el BIN de la tarjeta al servidor para validar su tipo antes de enviar a Cybersource
                    var cardNumber = $("#card_number").val();
                    var maskedNumber = cardNumber.substring(0, 6);
                    //metodo validar BiN
                    validateBIN(maskedNumber);

                    //no borrar por si acaso un rollback
                    @*showLoaderFullScreen("Calculando descuento");
                    $.ajax({
                        dataType: 'json',
                        type: "POST",
                        url: '@Url.Action("NewCardValidationAndDiscount", "Pay", new { Area = "Pay" })',
                        data: "maskedNumber=" + maskedNumber + "&fpProfiler=" + fpProfiler + "&nameTh=" + $("#Name").val(),
                        success: function (data) {
                            if (data.ResponseType == RESPONSE.SUCCESS) {
                                $("#lblPaymentService").html(data.Content.Service);
                                $("#lblPaymentTotalBills").html(data.Content.Currency + ' ' + data.Content.TotalAmount);

                                if (data.Content.Discount == "0,00") {
                                    $("#discountrowid").addClass("hide");
                                } else {
                                    $("#discountrowid").removeClass("hide");
                                    $("#lblPaymentDiscountAmount").html(data.Content.Currency + ' ' + data.Content.Discount);
                                    $("#lblPaymentDiscountType").html(data.Content.DiscountType);
                                    //$("#lblPaymentFinancialInclusion").html(data.Content.Currency + ' ' + data.Content.Discount);
                                }

                                $("#lblPaymentTotalAfterDiscount").html(data.Content.Currency + ' ' + data.Content.TotalAfterDiscount);
                                $('#cybersourceKeys').html(data.Content.keys);
                                $("#lbConfirmPayment").modal();
                            }
                            if (data.ResponseType == RESPONSE.ERROR) {
                                ShowNotification(data.Title, data.Message, 'error');
                            }
                            if (data.ResponseType == 2) {
                                ShowNotification(data.Title, data.Message, 'info');
                            }
                            hideLoaderFullScreen();
                        },
                        error: function (data) {
                            hideLoaderFullScreen();
                        }
                    });*@
                } else {
                    if ($("#Name").val() == "") {
                        $("#Name").addClass("input-validation-error");
                        $("#NameRequired").removeClass("hide");
                    }
                    if ($("#card_number").val() == "") {
                        $("#card_number").addClass("input-validation-error");
                        $("#NumberInvalid").removeClass("hide");
                    }
                    if ($("#card_cvn").val().length < 3 || $("#card_cvn").val().length > 4) {
                        $("#card_cvn").addClass("input-validation-error");
                        $("#SecurityCodeInvalid").removeClass("hide");
                        //ShowNotification("Código de seguridad", "El código de seguridad debe ser de 3 o 4 dígitos y se encuentra detras de su tarjeta.", 'error');
                    }
                    if ($("#generalError").hasClass("hide")) {
                        changeStateGeneralErrorForm();
                    }
                }
            }

        });

        $("#btnConfirm").click(function (e) {
            e.preventDefault();
            $.ajax({
                dataType: 'html',
                type: "GET",
                url: '@Url.Action("CheckPaymentModel", "Pay", new { Area = "Pay" })',
                success: function (data) {
                    if (data == RESPONSE.SUCCESS) {
                        var month = $("#ddlMonth").find(":selected").val();
                        var year = $("#ddlYear").find(":selected").val();
                        $("#card_expiry_date").attr("value", month + "-" + year);
                        showLoaderFullScreen("@PresentationWebStrings.Loader_Processing_Payment");
                        if (!$('#newCardForm').hasClass('hide')) {
                            $('#payment_confirmation').submit();
                        } else {
                            $('#payment_with_token_confirmation').submit();
                        }
                    }
                    if (data == RESPONSE.ERROR) {
                        window.location.assign('@Url.Action("Timeout", "Home", new{ Area=""})');
                    }
                }
            });
        });

        $("#btnCancelPayment").click(function (e) {
            e.preventDefault();
            $("#lbCancelPayment").modal();
        });

        $("a div.card").click(function (e) {
            e.preventDefault();
            var card = $(this);
            $.get("@Url.Action("ValidateSelectedCard", "Pay")", { "cardId": card.attr("data-cardId") }).done(function (response) {
                if (response.ResponseType === RESPONSE.SUCCESS) {
                    updateSelectedCard(card);
                }

                if (response.ResponseType === RESPONSE.ERROR) {
                    ShowNotification(response.Title, response.Message, 'info');
                }
                if (response.ResponseType === 2) {
                    ShowNotification(response.Title, response.Message, 'info');
                }
            });
        });

        function updateSelectedCard(element) {
            if (element.hasClass("Active") || element.hasClass("agregar")) {
                $("a div.card").removeClass("selected");
                element.addClass("selected");
                $("#btnNext").removeClass("hide");
            }

        }

        function doDiscount(maskedNumber)
        {
            showLoaderFullScreen("Calculando descuento");
                    $.ajax({
                        dataType: 'json',
                        type: "POST",
                        url: '@Url.Action("NewCardValidationAndDiscount", "Pay", new { Area = "Pay" })',
                        data: "maskedNumber=" + maskedNumber + "&fpProfiler=" + fpProfiler + "&nameTh=" + $("#Name").val(),
                        success: function (data) {
                            if (data.ResponseType == RESPONSE.SUCCESS) {
                                $("#lblPaymentService").html(data.Content.Service);
                                $("#lblPaymentTotalBills").html(data.Content.Currency + ' ' + data.Content.TotalAmount);

                                if (data.Content.Discount == "0,00") {
                                    $("#discountrowid").addClass("hide");
                                } else {
                                    $("#discountrowid").removeClass("hide");
                                    $("#lblPaymentDiscountAmount").html(data.Content.Currency + ' ' + data.Content.Discount);
                                    $("#lblPaymentDiscountType").html(data.Content.DiscountType);
                                    //$("#lblPaymentFinancialInclusion").html(data.Content.Currency + ' ' + data.Content.Discount);
                                }

                                $("#lblPaymentTotalAfterDiscount").html(data.Content.Currency + ' ' + data.Content.TotalAfterDiscount);
                                $('#cybersourceKeys').html(data.Content.keys);
                                $("#lbConfirmPayment").modal();
                            }
                            if (data.ResponseType == RESPONSE.ERROR) {
                                ShowNotification(data.Title, data.Message, 'error');
                            }
                            if (data.ResponseType == 2) {
                                ShowNotification(data.Title, data.Message, 'info');
                            }
                            hideLoaderFullScreen();
                        },
                        error: function (data) {
                            hideLoaderFullScreen();
                        }
                    });
        }

        function validateBIN(maskedNumber)
        {


            $.get("@Url.Action("ValidationBIN", "Pay")" + "?maskedNumber=" + maskedNumber).success(function (data) {
                if (data.ResponseType === RESPONSE.SUCCESS) {
                    console.log('data : ' + data);                                       

                    if (data.Content === true) {
                        doDiscount(maskedNumber);
                    }
                    else
                    {
                        ShowNotification(data.Title, 'Numero de BIN invalido.', 'error');
                    }

                }
                if (data.ResponseType === RESPONSE.ERROR) {
                    ShowNotification(data.Title, data.Message, 'error');
                }
            });

        }

        function calculateDiscount() {
            showLoaderFullScreen("Calculando descuento");
            var selectedCardId = $("a div.card.selected").attr('data-cardId');
            $.ajax({
                type: "POST",
                url: '@Url.Action("LoadKeysWithTokenAjax", "Pay", new {Area = "Pay"})',
                data: "cardId=" + selectedCardId + "&fpProfiler=" + fpProfiler,
                dataType: 'json',
                success: function (data) {
                    if (data.ResponseType == RESPONSE.SUCCESS) {
                        $("#lbConfirmPayment").modal();

                        $("#lblPaymentService").html(data.Content.Service);
                        $("#lblPaymentTotalBills").html(data.Content.Currency + ' ' + data.Content.TotalAmount);
                        $("#lblPaymentTotalAfterDiscount").html(data.Content.Currency + ' ' + data.Content.TotalAfterDiscount);
                        $('#keysWithToken').html(data.Content.keys);
                        $("#btnNext").removeClass("hide");

                        if (data.Content.Discount == "0,00") {
                            $("#discountrowid").addClass("hide");
                        } else {
                            $("#discountrowid").removeClass("hide");
                            $("#lblPaymentDiscountAmount").html(data.Content.Currency + ' ' + data.Content.Discount);
                            $("#lblPaymentDiscountType").html(data.Content.DiscountType);
                            //$("#lblPaymentFinancialInclusion").html(data.Content.Currency + ' ' + data.Content.Discount);
                        }
                    }
                    if (data.ResponseType == RESPONSE.ERROR) {
                        ShowNotification(data.Title, data.Message, 'error');
                        $("#btnNext").addClass("hide");
                    }

                    hideLoaderFullScreen();
                },
                error: function (data) {
                    hideLoaderFullScreen();
                }
            });
        }

        $("a.billdetail").click(function (e) {
            e.preventDefault();
            var billId = $(this).attr("id");
            $.get("@Url.Action("FinalBillDetail", "Pay")" + "?id=" + billId).success(function (data) {
                if (data.ResponseType == RESPONSE.SUCCESS) {
                    $("#billDetail").html(data.Content);
                    $("#modalDetailBill", "#billDetail").modal();
                }
                if (data.ResponseType == RESPONSE.ERROR) {
                    ShowNotification(data.Title, data.Message, 'error');
                }
            });
        });

        $('.Card_Number_Where').popover({
            'trigger': 'hover',
            'html': true,
            'content': function () {
                return "@PresentationWebStrings.Tootltip_Payment_Card_Number_Where";
            }
        });

        $('.Card_DueDate_Info').popover({
            'trigger': 'hover',
            'html': true,
            'content': function () {
                return "@PresentationWebStrings.Tootltip_Payment_Card_DueDate_Info";
            }
        });

        $('.Card_Code_Where').popover({
            'trigger': 'hover',
            'html': true,
            'content': function () {
                return "<img src='" + $(this).data('imageUrl') + "'>";
            }
        });
    });



    function validateCardNumber(number) {
        if (number.length != 16) { return false; }
        if (number.charAt(0) != 4) { return false; }

        var length = number.length;
        var value = null;
        var value_cad = null;
        var sum = 0;
        for (var i = 0; i < length; i += 2) {
            value = parseInt(number.charAt(i)) * 2;
            if (value > 9) {
                value_cad = value.toString();
                value = parseInt(value_cad.charAt(0)) +
                    parseInt(value_cad.charAt(1));
            }
            sum += value;
        }
        for (var i = 1; i < length; i += 2) {
            sum += parseInt(number.charAt(i));
        }
        if ((sum % 10) == 0) { return true; }
        return false;
    }
</script>