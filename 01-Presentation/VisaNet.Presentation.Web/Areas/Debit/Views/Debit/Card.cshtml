@using System.Configuration
@using VisaNet.Common.Resource.Presentation
@using VisaNet.Presentation.Web.Areas.Debit.Models
@model DebitModel

@{
    ViewBag.Title = "Index";
}

<div class="container p25t">
    <div class="row">
        <div class="col-md-12">
            <h3 class="mt5 nameSection">@PresentationWebStrings.Debit_New_Title</h3>
            <h4 class="pageDescription">@PresentationWebStrings.Debit_New_Desc</h4>
        </div>
        <div class="clearfix"></div>
        <div class="horizontalLineGrey"></div>
    </div>
    <div class="mt20">
        <div class="wizardBox">
            <!-- area de titulo y breadcrumb-->
            <div class="row">
                <div class="col-md-8">
                    <h3 class="mt5">Paso @Model.Setps[DebitsStepsEnum.Card]: Selección de Tarjeta</h3>
                    <h4 class="pageDescription">@PresentationWebStrings.Debit_Card</h4>
                </div>
                <div class="col-md-4 steps">
                    @Html.Partial("_Steps", Model.Setps)
                </div>
                <div class="clearfix"></div>
                <div class="horizontalLineGrey"></div>
            </div>

            <!-- area de datos seleccionados -->
            <div class="highlightArea">
                <h3><i class="icon-angle-right"></i>@PresentationWebStrings.Payment_Data_SoFar</h3>
                <label><i class="icon-angle-right lightBlue"></i> @PresentationWebStrings.Service: <span>@Model.CommerceModel.Name</span></label>

                @foreach (var props in Model.CommerceModel.ProductosListModel.First(x => x.Id == Model.CommerceModel.ProductSelected).ProductPropertyModelList)
                {
                    if (!string.IsNullOrEmpty(props.UserInput))
                    {
                        <label><i class="icon-angle-right lightBlue"></i> @props.Name: <span> @props.UserInput</span></label>
                    }
                }
                <label><i class="icon-angle-right lightBlue"></i> @PresentationWebStrings.Profile_User <span>@Model.ApplicationUserModel.Email</span></label>
            </div>

            <!--fin del area de datos seleccionados -->
            <form id="debit_with_token_confirmation" method="POST" action="@Url.Action("Create","Debit", new {Area = "Debit"})">

                @Html.AntiForgeryToken()
                @if (Model.ApplicationUserModel != null && Model.ApplicationUserModel.Cards != null && Model.ApplicationUserModel.Cards.Any())
                {
                    <div id="cards" class="highlightAreaCards">
                        <div class="row selectCreditCard">
                            <h3>
                                <i class="icon-credit-card"></i> ¿Querés adherir el servicio con algunas de tus tarjetas ya creadas?
                            </h3>

                            @{ int i = 0; }
                            @foreach (var card in Model.ApplicationUserModel.Cards)
                            {
                                var optChecked = string.Empty;

                                if (Convert.ToDateTime(card.DueDate) < DateTime.Now)
                                {
                                    optChecked = "Expired";
                                }

                                <div class="col-lg-3 col-lg-offset-0 col-md-4 col-md-offset-0 col-sm-6 col-sm-offset-0 col-xs-offset-0 col-xs-12">
                                    <a href="#">
                                        <div class="card @optChecked" data-cardid="@card.Id" data-type="existingCard">                                        
                                            <p class="mask">
                                                <span>@card.Number.Substring(0, 4)</span> 
                                                <span>@card.Number.Substring(4, 4)</span> 
                                                <span>@card.Number.Substring(8, 4)</span> 
                                                <span>@card.Number.Substring(12, 4)</span>
                                            </p>
                                            @if (!string.IsNullOrEmpty(card.Description))
                                            {
                                                var desc = card.Description.Length > 36 ? card.Description.Substring(0, 32) + " ..." : card.Description;
                                                <p class="vencimiento">@desc</p>
                                            }
                                            <p class="vencimiento">Vencimiento: @card.DueDate</p>
                                            <input type="hidden" value="@card.Id" />
                                            <img src="@Url.Content("~/Content/images/check.png")" class="check _hide">
                                            <span id="CanNotBeAssociated">No se puede seleccionar</span>
                                            <span id="Expired">Vencida</span>
                                        </div>
                                    </a>
                                </div>
                                i++;
                            }
                            <input type="hidden" name="card" id="card"/>

                            <div class="col-lg-3 col-lg-offset-0 col-md-4 col-md-offset-0 col-sm-6 col-sm-offset-0 col-xs-offset-0 col-xs-12">
                                <a href="#">
                                    <div class="card agregar" id="newCard">
                                        <p class="add">
                                            Agregar otra tarjeta                                            
                                        </p>                                        
                                    </div>
                                </a>
                            </div>
                        </div>
                    </div>
                }

            </form>

            <form id="debit_confirmation" method="POST" action="@ConfigurationManager.AppSettings["CybersourceFormUrl"]silent/token/create">
                <div id="cybersourceKeys"></div>

                <div id="newCardForm" class="@(Model.ApplicationUserModel.Cards != null && Model.ApplicationUserModel.Cards.Count > 0 ? "hide" : "")">

                    <!-- campos obligatorios -->
                    <h5><i class="icon-exclamation-sign visanetOrangeTxt"></i> @PresentationWebStrings.Required_First_Line <i class="icon-asterisk visanetOrangeTxt obligatoryField"></i>@PresentationWebStrings.Required_Second_Line</h5>
                    <!-- campos obligatorios -->

                    <div class="formMargin">
                        <div class="row">
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.CardModel.Name)<i class="icon-asterisk visanetOrangeTxt obligatoryField"></i>
                                @Html.TextBoxFor(m => m.CardModel.Name, new { @id = "Name", @class = "w100", placeholder = PresentationWebStrings.Payment_Card_Name, autocomplete = "off" })
                                @Html.ValidationMessageFor(m => m.CardModel.Name)
                                <span id="NameRequired" class="hide help-inline field-validation-error">@PresentationCoreMessages.RequiredField</span>
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.CardModel.Number)<i class="icon-asterisk visanetOrangeTxt obligatoryField"></i>
                                <input type="text" name="card_number" id="card_number" class="w100 numeric" maxlength="16" placeholder="@PresentationWebStrings.Service_Step3_Card_Number_Placeholder" autocomplete="off" />
                                <input type="hidden" name="card_type" id="card_type" value="001" />
                                @Html.ValidationMessageFor(m => m.CardModel.Number)
                                <span id="NumberInvalid" class="hide help-inline field-validation-error">@PresentationWebStrings.Card_Number_Invalid</span>
                                <h5 class="helpUser"><i class="icon-info-sign"></i><a class="Card_Number_Where"> @PresentationWebStrings.Payment_Card_Number_Info</a></h5>
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(m => m.CardModel.SecurityCode)<i class="icon-asterisk visanetOrangeTxt obligatoryField"></i>
                                <input type="password" name="card_cvn" id="card_cvn" class="w100 numeric" maxlength="4" placeholder="@PresentationWebStrings.Payment_Card_SecurityCode" autocomplete="off" />
                                @Html.ValidationMessageFor(m => m.CardModel.SecurityCode)
                                <span id="SecurityCodeInvalid" class="hide help-inline field-validation-error">@PresentationWebStrings.Card_CVNCheckInvalid</span>
                                <h5 class="helpUser"><i class="icon-info-sign"></i><a class="Card_Code_Where" data-image-url="@Url.Content("~/Content/images/CVN.png")"> @PresentationWebStrings.Payment_Card_SecurityCode_Info</a></h5>
                            </div>

                            <div class='col-md-6'>
                                @Html.LabelFor(m => m.CardModel.DueDate)<i class="icon-asterisk visanetOrangeTxt obligatoryField"></i>
                                <div class="creditCardsFix">
                                    <div class="col-xs-6 p5r pl0">
                                        <div class="selectMask w100">@Html.DropDownList("ddlMonth", Enumerable.Range(1, 12).Select(i => new SelectListItem { Text = i.ToString("00"), Value = i.ToString("00") }), new { @class = "w100" })</div>
                                    </div>
                                    <div class="col-xs-6 p5l pr0">
                                        <div class="selectMask w100">@Html.DropDownList("ddlYear", new SelectList(Enumerable.Range(DateTime.Now.Year, 25)), new { @class = "w100" })</div>
                                    </div>
                                    @Html.Hidden("card_expiry_date")
                                    @Html.ValidationMessageFor(m => m.CardModel.DueDate)
                                </div>
                                <h5 class="helpUser" style="margin-top: 49px"><i class="icon-info-sign"></i><a class="Card_DueDate_Info"> @PresentationWebStrings.Payment_Card_DueDate_Info</a></h5>
                            </div>

                        </div>
                    </div>

                    <!-- fin del formMargin-->
                </div>
                <div class="row wizardButtons">
                    <div class="col-md-8"></div>
                    <div class="col-md-4">
                        <div class="col-xs-6 p5r pl0">
                            @if (ViewBag.userLogead == null)
                            {
                                <a id="btnPrevious" href="@Url.Action("User")" class="btn btn-default btn-anterior mt10 w100"><i class="icon-chevron-sign-left"></i> @PresentationCoreMessages.Common_Previous</a>
                            }
                            else
                            {
                                <a id="btnPrevious" href="@Url.Action("Service")" class="btn btn-default btn-anterior mt10 w100"><i class="icon-chevron-sign-left"></i> @PresentationCoreMessages.Common_Previous</a>
                            }
                        </div>
                        <div class="col-xs-6 p5l pr0">
                            <button id="btnNext" class="btn btn-default btn-siguiente mt10 w100"> @PresentationWebStrings.DebitRequest_Confirm </button>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </form>
            <div class="row wizardButtons">
                <div class="col-md-8"></div>
                <div class="col-md-4">
                    <div class="col-xs-6 p5r pl0">

                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-2">
                <button id="btnCancelDebit" class="btn btn-default btn-cancelar mt10 w100">@PresentationWebStrings.Abandon_Request<i class="icon-remove"></i></button>
            </div>
        </div>
        @Html.Partial("_Cancel")
    </div>
</div>

@Html.Partial("_Confirm")

<script type="text/javascript">
    var fpProfiler = cybs_dfprofiler("@ViewBag.MerchantId", "@ViewBag.CsEnvironment", "@ConfigurationManager.AppSettings["CsFingerprintRedirectUrl"]");

    $(document).ready(function () {
        $("#stepCard").addClass("active");
        $("#debitRequestLink").addClass("vnpTitleSelected");

        $("#card_cvn").blur(function (e) {
            e.preventDefault();
            if (validateCardCVV($("#card_cvn").val())) {
                $("#SecurityCodeInvalid").addClass("hide");
            } else {
                $("#SecurityCodeInvalid").removeClass("hide");
            }
        });

        $("[data-type=existingCard]").click(function () {
            $("#newCardForm").addClass("hide");
            $("#cardNotSelected").addClass("hide");
        });

        $("#newCard").click(function () {
            $("#newCardForm").removeClass("hide");
            $("#cardNotSelected").addClass("hide");
            $("#btnNext").removeClass("hide");
            updateSelectedCard($(this));
        });

        $("#card_number").blur(function (e) {
            e.preventDefault();

            var cardNumber = $("#card_number").val();
            if (!validateCardNumber(cardNumber)) {
                $("#NumberInvalid").removeClass("hide");
            } else {
                $("#NumberInvalid").addClass("hide");
            }
        });

        $("#Name").blur(function (e) {
            e.preventDefault();

            var name = $("#Name").val();
            if (name == "") {
                $("#NameRequired").removeClass("hide");
                $("#Name").addClass("input-validation-error");
            } else {
                $("#NameRequired").addClass("hide");
            }
        });

        $("a div.card").click(function (e) {
            e.preventDefault();
            var card = $(this);
            $.get("@Url.Action("ValidateSelectedCard", "Debit")", { "cardId": card.attr("data-cardId") }).done(function (response) {
                if (response.ResponseType === RESPONSE.SUCCESS) {
                    updateSelectedCard(card);
                }

                if (response.ResponseType === RESPONSE.ERROR) {
                    ShowNotification(response.Title, response.Message, 'info');
                    $("#newCard").removeClass("selected");
                }
                if (response.ResponseType === 2) {
                    ShowNotification(response.Title, response.Message, 'info');
                    $("#newCard").removeClass("selected");
                }
            });
        });

        function updateSelectedCard(element) {
            $("a div.card").removeClass("selected");
            element.addClass("selected");
            $("#btnNext").removeClass("hide");
        }

        $('.Card_Number_Where').popover({
            'trigger': 'hover',
            'html': true,
            'content': function () {
                return "@PresentationWebStrings.Tootltip_Payment_Card_Number_Where";
            }
        });

        $('.Card_DueDate_Info').popover({
            'trigger': 'hover',
            'html': true,
            'content': function () {
                return "@PresentationWebStrings.Tootltip_Payment_Card_DueDate_Info";
            }
        });

        $('.Card_Code_Where').popover({
            'trigger': 'hover',
            'html': true,
            'content': function () {
                return "<img src='" + $(this).data('imageUrl') + "'>";
            }
        });

        @*$("#btnPrevious").click(function (e) {
            e.preventDefault();

            $.ajax({
                        dataType: 'json',
                        type: "GET",
                        url: '@Url.Action("User", "Debit", new { Area = "Debit" })',                                                
                        error: function (data) {
                            hideLoaderFullScreen();
                        }
                    });
        });*@

        $("#btnNext").click(function (e) {
            e.preventDefault();

            if ($("#newCardForm").hasClass("hide")) {
                var value = $('a div.card.selected', '#debit_with_token_confirmation').attr('data-cardId');
                if (value != undefined) {
                    $("input[name='card']").val(value);
                    $("#lbConfirmPayment").modal();
                } else {
                    CardNotSelected();
                }
            }
            else {
                if ($("#Name").val() != "" && $("#card_number").val() != "" && $("#NumberInvalid").hasClass("hide") && validateCardCVV($("#card_cvn").val())) {
                    //Envio el BIN de la tarjeta al servidor para validar su tipo antes de enviar a Cybersource
                    var cardNumber = $("#card_number").val();
                    var maskedNumber = cardNumber.substring(0, 6);
                    var holder = $("#Name").val();
                    showLoaderFullScreen("@PresentationWebStrings.Loader_Message");
                    $.ajax({
                        dataType: 'json',
                        type: "POST",
                        url: '@Url.Action("ValidateNewCardType", "Debit", new { Area = "Debit" })',
                        data: "maskedNumber=" + maskedNumber + "&fpProfiler=" + fpProfiler + "&nameTh=" + holder,
                        success: function (data) {
                            if (data.ResponseType == RESPONSE.SUCCESS) {
                                $('#cybersourceKeys').html(data.Content.keys);
                                $("#lbConfirmPayment").modal();
                            }
                            if (data.ResponseType == RESPONSE.ERROR) {
                                ShowNotification(data.Title, data.Message, 'error');
                            }
                            if (data.ResponseType == 2) {
                                ShowNotification(data.Title, data.Message, 'info');
                            }
                            hideLoaderFullScreen();
                        },
                        error: function (data) {
                            hideLoaderFullScreen();
                        }
                    });
                } else {
                    if ($("#Name").val() == "") {
                        $("#Name").addClass("input-validation-error");
                        $("#NameRequired").removeClass("hide");
                    }
                    if ($("#card_number").val() == "") {
                        $("#card_number").addClass("input-validation-error");
                        $("#NumberInvalid").removeClass("hide");
                    }
                    if ($("#card_cvn").val().length < 3 || $("#card_cvn").val().length > 4) {
                        $("#card_cvn").addClass("input-validation-error");
                        $("#SecurityCodeInvalid").removeClass("hide");
                        //ShowNotification("Código de seguridad", "El código de seguridad debe ser de 3 o 4 dígitos y se encuentra detras de su tarjeta.", 'error');
                    }

                }
            }

        });

        $("#btnConfirm").click(function (e) {
            e.preventDefault();
            showLoaderFullScreen("@PresentationWebStrings.Loader_Processing_Payment");

            if (!$('#newCardForm').hasClass('hide')) {
                var month = $("#ddlMonth").find(":selected").val();
                var year = $("#ddlYear").find(":selected").val();
                $("#card_expiry_date").attr("value", month + "-" + year);
                $('#debit_confirmation').submit();
            } else {
                $('#debit_with_token_confirmation').submit();
            }
        });

        $("#btnCancelDebit").click(function (e) {
            e.preventDefault();
            $("#lbCancelDebit").modal();
        });
    });

    function validateCardNumber(number) {
        if (number.length != 16) { return false; }
        if (number.charAt(0) != 4) { return false; }

        var length = number.length;
        var value = null;
        var value_cad = null;
        var sum = 0;
        for (var i = 0; i < length; i += 2) {
            value = parseInt(number.charAt(i)) * 2;
            if (value > 9) {
                value_cad = value.toString();
                value = parseInt(value_cad.charAt(0)) +
                    parseInt(value_cad.charAt(1));
            }
            sum += value;
        }
        for (var i = 1; i < length; i += 2) {
            sum += parseInt(number.charAt(i));
        }
        if ((sum % 10) == 0) { return true; }
        return false;
    }
</script>
