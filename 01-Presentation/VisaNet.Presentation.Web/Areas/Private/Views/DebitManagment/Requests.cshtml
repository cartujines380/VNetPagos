@using VisaNet.Common.Resource.Enums
@using VisaNet.Common.Resource.Presentation
@using VisaNet.Domain.EntitiesDtos.Enums
@{
    ViewBag.Title = @PresentationWebStrings.Debit_Requests;
}
@model VisaNet.Presentation.Web.Areas.Private.Models.DebitRequestsViewModel

<div class="container p25t" id="container">

    <!-- area de titulo para secciones que no son wizard-->
    <div class="row">
        <div class="col-md-8">
            <h3 class="mt5 nameSection">@PresentationWebStrings.Header_DebitRequests</h3>
            <h4 class="pageDescription">@PresentationWebStrings.DebitRequests_Desc</h4>
            <div class="horizontalLineGreyTitle"></div>
            @*<h5 class="f13 mb0"><i class="icon-warning-sign visanetOrangeTxt"></i>@PresentationWebStrings.PaymentHistory_Help</h5>*@
        </div>
        <div class="col-md-4"></div>
        <div class="clearfix"></div>
        <div class="mb10"></div>
    </div>
    <!-- fin del area de titulo para secciones que no son wizard -->

    <div class="pageBox mb20">
        <div class="formMargin">
            <h4 class="upDownControler">
                <a id="ocultarfiltros">
                    <i class="icon-chevron-up hide"></i>
                    <i class="icon-chevron-down"></i>
                    @PresentationWebStrings.Filters_title
                </a>
            </h4>
            <div id="filtros" style="display: none">
                <form id="filterForm">
                    @Html.HiddenFor(m => m.Filters.DisplayStart)
                    @Html.HiddenFor(m => m.DebitRequestIdToCancel)
                    @Html.HiddenFor(m => m.Filters.UserId)
                    <div class="row">
                        <div class="col-md-6">
                            <label>@PresentationWebStrings.Filters_From</label>
                            @Html.TextBoxFor(f => f.Filters.DateFrom, new { @class = "w100 dateFilter ", placeholder = PresentationWebStrings.Filters_Date_Placeholder })
                        </div>
                        <div class="col-md-6">
                            <label>@PresentationWebStrings.Filters_To</label>
                            @Html.TextBoxFor(f => f.Filters.DateTo, new { @class = "w100 dateFilter", placeholder = PresentationWebStrings.Filters_Date_Placeholder })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6">
                            <label>@PresentationWebStrings.Filters_Service</label>
                            @Html.TextBoxFor(f => f.Filters.Service, new { @class = "w100", placeholder = PresentationWebStrings.Filters_Service_Placeholder })
                        </div>
                        <div class="col-md-6">
                            <label>@PresentationWebStrings.Filters_DebitRequestState</label>
                            <div class="selectMask w100">
                                @Html.DropDownListFor(f => f.Filters.DebitState,
                                        (from int value in Enum.GetValues(typeof(DebitRequestStateDto))
                                         where value != (int)DebitRequestStateDto.Cancelled 
                                            && value != (int)DebitRequestStateDto.ManualSynchronization 
                                            && value != (int)DebitRequestStateDto.Synchronized
                                         select new SelectListItem
                                         {
                                             Text = EnumsStrings.ResourceManager.GetString(string.Format("{0}_{1}", typeof(DebitRequestStateDto).Name, Enum.GetName(typeof(DebitRequestStateDto), value))),
                                             Value = value.ToString()
                                         }).ToList(),
                                        PresentationWebStrings.Filters_DebitRequestState_Placeholder)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        @if (Model.Cards.Any())
                        {
                            <div class="col-md-6">
                                <label>@PresentationWebStrings.Filters_Card</label>
                                <div class="selectMask w100">
                                    @Html.DropDownListFor(f => f.Filters.CardId, Model.Cards, PresentationWebStrings.Filters_Card_Placeholder)
                                </div>
                            </div>
                        }
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="col-xs-6 p5r pl0">
                                <a class="btn btn-default btn-standar mt10 w100" id="clean">@PresentationWebStrings.Filters_Clean</a>
                            </div>
                            <div class="col-xs-6 p5l pr0">
                                <a class="btn btn-default btn-standar mt10 w100" id="search"> @PresentationWebStrings.Filters_Search</a>
                            </div>
                        </div>
                        <div class="col-md-8"></div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <div class="pageBox mb20" id="listado">
        <div class="formMargin">
            @*<h4>@PresentationWebStrings.Debit_Requests</h4>*@
            <div class="row" id="contentHolder"></div>
        </div>
        <a href="@Url.Action("Service","Debit", new {Area = "Debit"})" id="newDebit" class="btn btn-default btn-link-box mt10"><i class="icon-plus"></i> Nueva solicitud</a>
    </div>
    <div class="pageBox mb20" id="divLoading" style="display: none">
        <div class="formMargin">
            <div class="loadingMessaje">
                <div class="loading">@PresentationCoreMessages.Common_Waiting</div>
            </div>
        </div>
    </div>
    @if (Model.Requests != null && Model.Requests.Count() > 10)
    {
        <a href="#" id="lnkOlderItems">@PresentationCoreMessages.Common_SeeMoreResults</a>
    }
</div>
@Html.Partial("_ConfirmCancelDebit")
@Html.Partial("_ConfirmDeleteDebit")

<script type="text/javascript">
    $(document).ready(function () {
        LoadList();
        $("#debitRequestLink").addClass("vnpTitleSelected");

        $('input.dateFilter').datepicker({
            language: "es",
            format: 'dd/mm/yyyy'
        });

        $('input.dateFilter').on('changeDate', function (ev) {
            $(this).datepicker('hide');
        });

        $('input.dateFilter').on('click', function (ev) {
            $(this).datepicker('show');
        });

        $("#ocultarfiltros").click(function () {
            $("#filtros").toggle("slow");
            if ($("i.icon-chevron-up").hasClass("hide")) {
                $("i.icon-chevron-down").addClass("hide");
                $("i.icon-chevron-up").removeClass("hide");
            } else {
                $("i.icon-chevron-up").addClass("hide");
                $("i.icon-chevron-down").removeClass("hide");
            }
        });

        $('#clean').click(function (e) {
            e.preventDefault();
            $("#@Html.IdFor(m => m.Filters.DateFrom)").val("");
            $("#@Html.IdFor(m => m.Filters.DateTo)").val("");
            $("#@Html.IdFor(m => m.Filters.Service)").val("");
            $("#@Html.IdFor(m => m.Filters.DebitType)").val("");
            $("#@Html.IdFor(m => m.Filters.CardId)").val("");
            $("#@Html.IdFor(m => m.Filters.DebitState)").val("");
            $("#@Html.IdFor(m => m.Filters.DisplayStart)").val(0);
            LoadList();
        });

        $('#search').click(function (e) {
            e.preventDefault();
            $("#@Html.IdFor(m => m.Filters.DisplayStart)").val(0);
            LoadList();
        });

        $("#container").on("click", "#lnkOlderItems", function (e) {
            e.preventDefault();
            var displayStart = Number($("#@Html.IdFor(m => m.Filters.DisplayStart)").val());
            displayStart = displayStart + 1;
            $("#@Html.IdFor(m => m.Filters.DisplayStart)").val(displayStart);
            LoadMoreItems();
        });

        $("#listado").on("click", ".send", function (e) {
            e.preventDefault();
            $.get($(this).attr("href"), function (data) {
                if (data.ResponseType == RESPONSE.SUCCESS) {
                    ShowNotification(data.Title, data.Message, 'success');
                }
                if (data.ResponseType == RESPONSE.ERROR) {
                    ShowNotification(data.Title, data.Message, 'error');
                }
            }).fail(function () { window.location.replace('@Url.Action("Index", "Error")'); });
        });

        $("#listado").on("click", "a.Cancel", function (e) {
            e.preventDefault();
            var id = $(this).data("id");
            $('#DebitRequestIdToCancel').val(id);

            $('#lbConfirmCancel').modal('show');
        });
        $("#listado").on("click", "a.Delete", function (e) {
            e.preventDefault();
            var id = $(this).data("id");
            $('#DebitRequestIdToCancel').val(id);

            $('#lbConfirmDelete').modal('show');
        });

        $('#btnConfirmCancel').on('click', function (e) {
            e.preventDefault();
            CancelDebitRequest();
        });
        $('#btnConfirmDelete').on('click', function (e) {
            e.preventDefault();
            DeleteDebitRequest();
        });
    });

    function LoadList() {
        $("#divLoading").show();
        $("#lnkOlderItems").hide();
        $.ajax({
            data: $('#filterForm').serialize(),
            type: "POST",
            url: '@Url.Action("GetRequests", "DebitManagment",new{Area="Private"})',
            dataType: 'html',
            success: function (result) {
                //Se verifica si expiro la sesion
                try {
                    var resultJson = JSON.parse(result);
                    if (resultJson != null && resultJson.sessionExpired != null && resultJson.sessionExpired == true) {
                        window.location = resultJson.loginUrl;
                    }
                } catch (e) { }
                $('#contentHolder').html(result);
                $("#divLoading").hide();
                $("#lnkOlderItems").show();
            },
            error: function () {
                $("#divLoading").hide();
                $("#lnkOlderItems").show();
            }
        });
    }

    function LoadMoreItems() {
        $("#divLoading").show();
        $("#lnkOlderItems").hide();
        $.ajax({
            data: $('#filterForm').serialize(),
            type: "POST",
            url: '@Url.Action("GetRequests", "DebitManagment",new{Area="Private"})',
            dataType: 'html',
            success: function (result) {
                //Se verifica si expiro la sesion
                try {
                    var resultJson = JSON.parse(result);
                    if (resultJson != null && resultJson.sessionExpired != null && resultJson.sessionExpired == true) {
                        window.location = resultJson.loginUrl;
                    }
                } catch (e) { }
                $('#contentHolder').append(result);
                $("#divLoading").hide();
            },
            error: function () {
                $("#divLoading").hide();
                $("#lnkOlderItems").show();
            }
        });
    }

    function CancelDebitRequest() {
        $("#divLoading").show();
        $("#lnkOlderItems").hide();
        $.ajax({
            data: $('#filterForm').serialize(),
            type: "POST",
            url: '@Url.Action("CancelDebitRequest", "DebitManagment",new{Area="Private"})',
            //dataType: 'html',
            success: function (result) {
                $("#lbConfirmCancel").modal("hide");
                $("#divLoading").hide();
                //Se verifica si expiro la sesion
                try {
                    var resultJson = JSON.parse(result);
                    if (resultJson != null && resultJson.sessionExpired != null && resultJson.sessionExpired == true) {
                        window.location = resultJson.loginUrl;
                    }
                } catch (e) { }
                if (result.ResponseType == RESPONSE.SUCCESS) {
                    $('#contentHolder').html(result.Content);
                    ShowNotification(result.Title, result.Message, 'success');
                }
                if (result.ResponseType == RESPONSE.ERROR) {
                    ShowNotification(result.Title, result.Message, 'error');
                }
            },
            error: function () {
                $("#divLoading").hide();
                $("#lnkOlderItems").show();
                ShowNotification("", "No pudimos cancelar su solicitud. Intentá nuevamente o comunicate con el CallCenter", 'error');
            }
        });
    }

    function DeleteDebitRequest() {
        $("#divLoading").show();
        $("#lnkOlderItems").hide();
        $.ajax({
            data: $('#filterForm').serialize(),
            type: "POST",
            url: '@Url.Action("DeleteDebitRequest", "DebitManagment",new{Area="Private"})',
            //dataType: 'html',
            success: function (result) {
                $("#lbConfirmDelete").modal("hide");
                //Se verifica si expiro la sesion
                try {
                    var resultJson = JSON.parse(result);
                    if (resultJson != null && resultJson.sessionExpired != null && resultJson.sessionExpired == true) {
                        window.location = resultJson.loginUrl;
                    }
                } catch (e) { }
                if (result.ResponseType == RESPONSE.SUCCESS) {
                    $('#contentHolder').html(result.Content);
                    ShowNotification(result.Title, result.Message, 'success');
                }
                if (result.ResponseType == RESPONSE.ERROR) {
                    ShowNotification(result.Title, result.Message, 'error');
                }
            },
            error: function () {
                $("#divLoading").hide();
                ShowNotification("", "No pudimos cancelar su solicitud. Intentá nuevamente o comunicate con el CallCenter", 'error');
            }
        });
    }
</script>