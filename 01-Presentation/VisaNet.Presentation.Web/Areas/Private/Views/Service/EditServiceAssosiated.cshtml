@{
    ViewBag.Title = "EDIT";
}

@using VisaNet.Common.Resource.Presentation
@model VisaNet.Presentation.Web.Areas.Private.Models.ServiceAssociateModel
<div class="container p25t">
    <div class="wizardBox">
        <!-- area de titulo y breadcrumb-->
        <div class="row">
            <div class="col-md-8">
                <h3 class="mt5">@PresentationWebStrings.Service_Edit_Step1_Title</h3>
                <h4 class="pageDescription"> @PresentationWebStrings.Service_Edit_Step1_Subtitle</h4>
            </div>
            <div class="col-md-4 steps">
                @Html.Partial("_StepsEdit")
            </div>
            <div class="clearfix"></div>
            <div class="horizontalLineGrey"></div>
        </div>
        <!-- area de titulo y breadcrumb-->
        <!-- campos obligatorios -->
        <h5><i class="icon-exclamation-sign visanetOrangeTxt"></i> @PresentationWebStrings.Required_First_Line <i class="icon-asterisk visanetOrangeTxt obligatoryField"></i>@PresentationWebStrings.Required_Second_Line</h5>
        <!-- campos obligatorios -->
        @using (Html.BeginForm("EditNotification", "Service", FormMethod.Post, new Dictionary<string, object> { { "id", "form" } }))
        {
            @Html.AntiForgeryToken()
            <div class="formMargin">
                <div class="row">
                    <div class="col-md-12 hide generalError" id="generalError">
                        <i class="icon-warning-sign"></i>
                        @PresentationWebStrings.From_General_Error
                    </div>
                </div>
                @Html.HiddenFor(s => s.ServiceSecondcomboId)
                <div class="row">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.ServiceFirstComboId)<i class="icon-asterisk visanetOrangeTxt obligatoryField"></i>
                        @Html.TextBoxFor(s => s.ServiceFirstComboName, new { @class = "w100", @disabled = "disabled" })
                        @Html.HiddenFor(s => s.ServiceFirstComboId)
                        @Html.HiddenFor(s => s.ServiceFirstComboName)
                    </div>
                </div>

                @if (Model.ServiceSecondcomboId != Guid.Empty)
                {
                    <div class="row">
                        <div class="col-md-6">
                            <label></label>
                            @Html.TextBoxFor(s => s.ServiceName, new { @class = "w100", @disabled = "disabled" })
                            @Html.HiddenFor(s => s.ServiceName)
                            @Html.HiddenFor(s => s.ServiceSecondcomboId)
                        </div>
                    </div>
                }

                <div class="row">
                    <div id="ReferencesDiv" class="col-md-12">
                        @Html.Partial("_References", Model)
                    </div>
                </div>
                <div class="horizontalLineWhite"></div>

                <div class="row">
                    <div class="col-md-6">
                        @Html.LabelFor(model => model.Description)
                        @Html.TextAreaFor(model => model.Description, new { @class = "w100 ", placeholder = PresentationWebStrings.Payment_Placeholder_Description })
                        @Html.ValidationMessageFor(model => model.Description)
                    </div>
                </div>
                <div class="row wizardButtons">
                    <div class="col-md-8"></div>
                    <div class="col-md-4 pr0">
                        <div class="col-xs-6">
                        </div>
                        <div class="col-xs-6 p5l pr0">
                            <button id="btnNext" class="btn btn-default btn-siguiente mt10 w100"> @PresentationWebStrings.Next <i class="icon-chevron-sign-right"></i></button>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
            @Html.HiddenFor(s => s.Id)
            @Html.HiddenFor(s => s.ReferenceValue)
            @Html.HiddenFor(s => s.ReferenceValue2)
            @Html.HiddenFor(s => s.ReferenceValue3)
            @Html.HiddenFor(s => s.ReferenceValue4)
            @Html.HiddenFor(s => s.ReferenceValue5)
            @Html.HiddenFor(s => s.ReferenceValue6)
            <!-- fin del formMargin-->
        }
    </div>
    <div class="row">
        <div class="col-md-2">
            <button id="btnCancelPayment" class="btn btn-default btn-cancelar mt10 w100">@PresentationWebStrings.Cancel_Edit <i class="icon-remove"></i></button>
        </div>
    </div>

    @Html.Partial("_CancelEdition")
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#servicesLink").addClass("vnpTitleSelected");
        $("#stepService").addClass("active");

        $("#btnNext").click(function () {
            if ($("#form").valid()) {
                $("#form").submit();
            } else {
                if ($("#generalError").hasClass("hide")) {
                    changeStateGeneralErrorForm();
                }
            }
        });

        $("#btnCancelPayment").click(function () {
            $("#lbCancelPayment").modal({
                onShow: function () {
                    $("#btnCancel").click(function () {
                        window.location.replace('@Url.Action("Index", "Dashboard")');
                    });
                }
            });
        });

        $(function () {
            $('#serviceList').change(function () {
                LoadRef();
            });
        });
    });

    function LoadRef() {
        $("#ServiceName").val($('#serviceList option:selected').text());
        $.ajax({
            data: "serviceId=" + $('#serviceList').val(),
            url: '@Url.Action("GetService", "Service")',
            dataType: 'html',
            success: function (result) {
                //Se verifica si expiro la sesion
                try {
                    var resultJson = JSON.parse(result);
                    if (resultJson != null && resultJson.sessionExpired != null && resultJson.sessionExpired == true) {
                        window.location = resultJson.loginUrl;
                    }
                } catch (e) { }
                $('#ReferencesDiv').html(result);
                $('#ReferenceValue').val("@Model.ReferenceValue");
                $('#ReferenceValue2').val("@Model.ReferenceValue2");
                $('#ReferenceValue3').val("@Model.ReferenceValue3");
            }
        });
    }
</script>
