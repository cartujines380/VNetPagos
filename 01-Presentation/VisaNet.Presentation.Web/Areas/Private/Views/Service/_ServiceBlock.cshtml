@using System.Configuration
@using VisaNet.Common.Resource.Presentation
@using VisaNet.Domain.EntitiesDtos.Enums
@using VisaNet.Utilities.Exportation.ExtensionMethods
@model VisaNet.Presentation.Web.Areas.Private.Models.ServiceListModel

<div class="itemBox serviceItem">
    <div class="row">
        <div class="col-md-8 col-sm-8 col-xs-12 serviceInformation">
            <div class="col-md-3 pr0 pl0 serviceImage">
                @if (!String.IsNullOrEmpty(Model.ServiceImageName))
                {
                    <img src="@Model.ServiceImageName" width="65" />
                }
                else
                {
                    <img src="@ConfigurationManager.AppSettings["DefaultServiceImage"]" width="65" />
                }
            </div>
            <div class="col-md-9 serviceDetail">
                <ul>
                    <li class="mb20">
                        @if (!string.IsNullOrEmpty(Model.ServiceContainerName))
                        {<span class="titleCard">@Model.ServiceContainerName - @Model.ServiceName </span>}
                        else
                        {<span class="titleCard">@Model.ServiceName </span>}
                        <span class="shortDescription" title="@Model.ServiceDesc">
                            @(string.IsNullOrEmpty(Model.ServiceDesc) ? string.Empty : " - " + @Model.ServiceDesc.Short(45))
                        </span>
                    </li>
                    @if (Model.AskUserForReferences)
                    {
                        if (!String.IsNullOrEmpty(Model.ServiceRefName))
                        {
                            <li><span class="bold">@Model.ServiceRefName:</span> @Model.ServiceRefValue</li>
                        }
                        if (!String.IsNullOrEmpty(Model.ServiceRefName2))
                        {
                            <li><span class="bold">@Model.ServiceRefName2:</span> @Model.ServiceRefValue2</li>
                        }
                        if (!String.IsNullOrEmpty(Model.ServiceRefName3))
                        {
                            <li><span class="bold">@Model.ServiceRefName3:</span> @Model.ServiceRefValue3</li>
                        }
                        if (!String.IsNullOrEmpty(Model.ServiceRefName4))
                        {
                            <li><span class="bold">@Model.ServiceRefName4:</span> @Model.ServiceRefValue4</li>
                        }
                    }
                    <li>
                        <span class="bold">Tarjetas habilitadas :</span>
                        @foreach (var cardModel in Model.Cards)
                        {
                            @Html.Raw(cardModel.Number + (!string.IsNullOrEmpty(cardModel.Description) ? " (" + cardModel.Description + ")" : ""))                            
                            <br />
                        }
                    </li>
                        
                </ul>
            </div>
        </div>
        <div class="col-md-4 col-sm-4 col-xs-12 serviceActions">
            <ul>
                @if (Model.AllowGetBills)
                {
                    <li><a href="#" id="@Model.ServiceId" class="bills"><i class="icon-file"></i> @PresentationWebStrings.Bills_Generated</a></li>
                }
                @if (Model.EnableAutomaticPayment)
                {
                    if (Model.ServiceAutomaticPaymentId != null)
                    {
                        <li><a href="@Url.Action("Item", "AutomaticPayment", new RouteValueDictionary { { "serviceId", Model.ServiceId }, { "fromConfiguration", true } })"><i class="icon-search"></i>@PresentationWebStrings.Configuration </a></li>
                        <li><a href="#" class="DeleteAp" data-service="@Model.ServiceId"><i class="icon-trash"></i>@PresentationWebStrings.AutomaticPayment_Delete_Button </a></li>
                    }
                    else
                    {
                        <li><a href="@Url.Action("Item", "AutomaticPayment", new RouteValueDictionary { { "serviceId", Model.ServiceId }, { "fromConfiguration", false } })" data-service="@Model.ServiceAutomaticPaymentId"><i class="fa fa-clock-o"></i>@PresentationWebStrings.AutomaticPayment_Add_Button</a></li>
                    }
                }
                else
                {
                    <li>@PresentationWebStrings.AutomaticPayment_NotAllowed</li>
                }
                @if (Model.AllowInputAmount)
                {
                    <li><a href="#" id="@Model.ServiceId" class="payImportService"><i class="icon-dollar"></i> @PresentationWebStrings.Pay</a></li>
                }

                <li><a href="@Url.Action("EditServiceAssosiated", new RouteValueDictionary { { "serviceId", Model.ServiceId } })"><i class="icon-pencil"></i>@PresentationWebStrings.Service_Edit </a></li>
                <li><a href="@Url.Action("CardList","Service", new RouteValueDictionary { { "serviceId", Model.ServiceId } })"><i class="icon-credit-card"></i>@PresentationWebStrings.Card_My</a></li>

                
                <li>
                    <a class="Delete" href="#" data-service="@Model.ServiceId" data-name="@Model.ServiceName">
                        <i class="icon-remove"></i>@PresentationWebStrings.Eliminate_Service
                    </a>
                </li>
            </ul>
        </div>
    </div>
</div>