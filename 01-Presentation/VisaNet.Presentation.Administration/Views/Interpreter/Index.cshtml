@using VisaNet.Common.Resource.Presentation
@using VisaNet.Common.Security.Entities.Enums
@using VisaNet.Presentation.Administration.MvcHtmlHelpers
@model VisaNet.Domain.EntitiesDtos.TableFilters.InterpreterFilterDto

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@PresentationAdminStrings.Interpreter</h2>

<div class="row">
    <div class="col-md-3">
        <label>@PresentationAdminStrings.Name</label>
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control w100", @placeholder = "Ingrese el nombre a buscar", autocomplete = "off" })
    </div>
</div>

<div class="row">
    <div class="col-md-2">
        <a class="btn btn-default btn-standar mt10 w100" id="execute">@PresentationAdminStrings.Common_Search</a>
    </div>
</div>

<div class="loadingMessaje hidden" id="loaderMessage">
    <div class="loading">@PresentationAdminStrings.Loading</div>
</div>

<div class="row">
    <div class="col-lg-12">
        <h2></h2>
        <div class="table-responsive">
            <table id="table" class="table table-bordered table-striped table-hover tablesorter">
                <thead>
                    <tr>
                        <th>
                            @PresentationAdminStrings.Name
                        </th>
                        <th>
                            <label>@PresentationAdminStrings.FileName</label>
                        </th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
        @Html.ActionActionLink(Actions.InterpreterCreate, "<i class=\"icon-plus\"></i>" + PresentationAdminStrings.Create, new Dictionary<string, object> { { "Class", "btn btn-default" }, { "id", "btnNew" } })
    </div>
</div>

<div id="divLb"></div>

@Html.Partial("_DeleteLightbox")

<script type="text/javascript">
    $(document).ready(function () {
        var dataTableFilters;

        function externalFilters(aoData) {
            aoData.push({ "name": "Name", "value": $("#@Html.IdFor(m => m.Name)").val() });
        }

        dataTableFilters = applyDatatableExternalFilters($('#table'), null,
                [
                    { "mDataProp": "Name" },
                    {
                        "mDataProp": "FileName",
                        "bSearchable": false,
                        "bSortable": false,
                    },
                    {
                        "sName": "Comments",
                        "sClass": "column-icon",
                        "sDefaultContent": "",
                        "bSearchable": false,
                        "bSortable": false,
                        "fnRender": function (oObj) {
                            return '@Html.ActionGridActionLink(Actions.InterpreterEdit, "<i class=\"fa fa-edit\"></i>", new Dictionary<string, object> { { "Class", "btn-edit" } })';

                        }
                    },
                    {
                        "sName": "Detalles",
                        "sClass": "column-icon",
                        "sDefaultContent": "",
                        "bSearchable": false,
                        "bSortable": false,
                        "fnRender": function (oObj) {
                            return '@Html.ActionGridActionLink(Actions.InterpreterDetails, "<i class=\"fa fa-search\"></i>", new Dictionary<string, object> { { "Class", "btn-detalles" } })';
                        }
                    },
                {
                    "sName": "Borrar",
                    "sClass": "column-icon",
                    "sDefaultContent": "",
                    "bSearchable": false,
                    "bSortable": false,
                    "fnRender": function (oObj) {
                        return '@Html.ActionGridActionLink(Actions.InterpreterDelete, "<i class=\"fa fa-trash-o\"></i>", new Dictionary<string, object> { { "Class", "btn-borrar" } })';
                    },
                }],
    '@Url.Action("AjaxHandler", "Interpreter")',
    externalFilters,
    [[0, "desc"]]);

        $("#execute").click(function (e) {
            e.preventDefault();
            dataTableFilters.fnFilter();
        });

        $('table').on("click", ".btn-borrar", function (e) {
            if (!$(this).hasClass("disabled")) {
                e.preventDefault();
                tr = $(this).parents("tr");
                var lb = $('#lbConfirmDelete');
                $("#lbHiddenUrl", lb).val($(this).attr("href"));
                lb.modal();
            }
        });

    });



</script>