@using VisaNet.Common.Resource.Enums
@using VisaNet.Common.Resource.Helpers
@using VisaNet.Common.Resource.Presentation
@using VisaNet.Common.Security.Entities.Enums
@using VisaNet.Domain.EntitiesDtos.Enums
@using VisaNet.Presentation.Administration.Models
@using VisaNet.Presentation.Administration.MvcHtmlHelpers
@model VisaNet.Domain.EntitiesDtos.TableFilters.ReportsUserFilterDto

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@PresentationAdminStrings.ReportsUser</h2>

<div class="row">
    <div class="col-md-3">
        <label>@PresentationAdminStrings.From</label>
        @Html.EditorFor(m => m.DateFrom, new { @class = "form-control w100" })
    </div>
    <div class="col-md-3">
        <label>@PresentationAdminStrings.To</label>
        @Html.EditorFor(m => m.DateTo, new { @class = "form-control w100" })
    </div>
    <div class="col-md-3">
        <label>@PresentationAdminStrings.Filters_Email</label>
        <div class="selectMask w100">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control w100", @placeholder = "Ingrese el correo electrónico a buscar", autocomplete = "off" })
        </div>
    </div>
    <div class="col-md-3">
        <label>@PresentationAdminStrings.Audit_LogUserType</label>
        <div class="selectMask w100">
            <div class="selectMask w100">
                @Html.DropDownListFor(m => m.UserType, EnumHelpers.ConvertToSelectList(typeof(UserType), EnumsStrings.ResourceManager), PresentationAdminStrings.Reports_Conciliation_All, new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "form-control" } })
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-3">
        <label>@PresentationAdminStrings.Status</label>
        <div class="selectMask w100">
            <div class="selectMask w100">
                @Html.DropDownListFor(m => m.ActiveOrInactive, EnumHelpers.ConvertToSelectList(typeof(ActiveOrInactiveEnumDto), EnumsStrings.ResourceManager), new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "form-control" } })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-2">
        <a class="btn btn-default btn-standar mt10 w100" id="execute">@PresentationAdminStrings.Common_Search</a>
    </div>
</div>

<div class="loadingMessaje hidden" id="loaderMessage">
    <div class="loading">@PresentationAdminStrings.Loading</div>
</div>

<div class="row">
    <div class="col-lg-12">
        <h2></h2>
        <div class="table-responsive">
            <table id="table" class="table table-bordered table-striped table-hover tablesorter">
                <thead>
                    <tr>
                        <th>
                            @PresentationAdminStrings.CreationDate
                        </th>
                        <th>
                            @PresentationAdminStrings.Email
                        </th>
                        <th>
                            @PresentationAdminStrings.Name
                        </th>
                        <th>
                            @PresentationAdminStrings.Filters_Surname
                        </th>
                        <th>
                            @PresentationAdminStrings.CallCenter_Pin
                        </th>
                        <th>
                            Estado
                        </th>
                        <th>
                            Pagos realizados
                        </th>
                        <th>
                            Tarjetas
                        </th>
                        <th>
                            Servicios asociados
                        </th>
                        <th></th>
                        <th></th>
                        <th>Bloqueado/<br />Desbloqueado</th>
                        <th>Cambiar contraseña</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

@Html.Partial("_ChangePasswordLightbox", new ChangeWebUserPasswordModel())

<div id="divLb"></div>

<script type="text/javascript">

    $(document).ready(function () {

        var dataTableFilters;

        function externalFilters(aoData) {
            aoData.push({ "name": "DateFrom", "value": $("#@Html.IdFor(m => m.DateFrom)").val() });
            aoData.push({ "name": "DateTo", "value": $("#@Html.IdFor(m => m.DateTo)").val() });
            aoData.push({ "name": "Email", "value": $("#@Html.IdFor(m => m.Email)").val() });
            aoData.push({ "name": "UserType", "value": $("#@Html.IdFor(m => m.UserType)").val() });
            aoData.push({ "name": "ActiveOrInactive", "value": $("#@Html.IdFor(m => m.ActiveOrInactive)").val() });
        }

        function drawTable() {
            dataTableFilters = applyDatatableExternalFilters($('#table'), null,
                [
                    { "mDataProp": "CreationDate" },
                    { "mDataProp": "Email" },
                    {
                        "mDataProp": "Name",
                        "bSearchable": false,
                        "bSortable": false,
                    },
                    {
                        "mDataProp": "Surname",
                        "bSearchable": false,
                        "bSortable": false,
                    },
                    {
                        "mDataProp": "CallCenterKey",
                        "bSearchable": false,
                        "bSortable": false,
                    },
                    { "mDataProp": "Status" },
                    {
                        "mDataProp": "PaymentCount",
                        "bSearchable": false,
                        "bSortable": false,
                        "fnRender": function (oObj) {
                            if (oObj.aData != null && oObj.aData.PaymentCount > 0) {
                                return "<a target='_blank' href='@Url.Action("Index", "ReportsTransactions")?Email=" + oObj.aData.Email + "'>" + oObj.aData.PaymentCount + "</a>";
                            } else {
                                return "0";
                            }
                        }
                    },
                    {
                        "mDataProp": "CardsCount",
                        "bSearchable": false,
                        "bSortable": false,
                        "fnRender": function (oObj) {
                            if (oObj.aData != null && oObj.aData.CardsCount > 0) {
                                return "<a target='_blank' href='@Url.Action("Index", "ReportsCards")?Email=" + oObj.aData.Email + "'>" + oObj.aData.CardsCount + "</a>";
                            } else {
                                return "0";
                            }
                        }
                    },
                    {
                        "mDataProp": "ServiceAsociatedCount",
                        "bSearchable": false,
                        "bSortable": false,
                        "fnRender": function (oObj) {
                            if (oObj.aData != null && oObj.aData.ServiceAsociatedCount > 0) {
                                return "<a target='_blank' href='@Url.Action("Index", "ReportsServicesAssociated")?Email=" + oObj.aData.Email + "'>" + oObj.aData.ServiceAsociatedCount + "</a>";
                            } else {
                                return "0";
                            }
                        }
                    },
                    {
                        "sName": "Comments",
                        "sClass": "column-icon",
                        "sDefaultContent": "",
                        "bSearchable": false,
                        "bSortable": false,
                        "fnRender": function (oObj) {
                            return '@Html.ActionGridActionLink(Actions.ReportsUsersEdit, "<i class=\"fa fa-edit\"></i>", new Dictionary<string, object> { { "Class", "btn-edit" } })';

                        }
                    },
                    {
                        "sName": "Detalles",
                        "sClass": "column-icon",
                        "sDefaultContent": "",
                        "bSearchable": false,
                        "bSortable": false,
                        "fnRender": function (oObj) {
                            return '@Html.ActionGridActionLink(Actions.ReportsUsersDetails, "<i class=\"fa fa-search\"></i>", new Dictionary<string, object> { { "Class", "btn-detalles" } })';
                        }
                    },
                    {
                        "sName": "Borrar",
                        "sClass": "column-icon",
                        //esto le indica que no lo mapee con el array
                        "sDefaultContent": "",
                        "bSearchable": false,
                        "bSortable": true,
                        "fnRender": function (oObj) {
                            if (oObj.aData.StatusValue != 3) {
                                return '@Html.ActionGridActionLink(Actions.ReportsUsersDelete, "<i class=\"fa fa-toggle-on fa-2x\"></i>", new Dictionary<string, object> { { "Class", "btn-borrar lnkUnBlock" } })';
                            }
                            return '@Html.ActionGridActionLink(Actions.ReportsUsersDelete, "<i class=\"fa fa-toggle-off fa-2x\"></i>", new Dictionary<string, object> { { "Class", "btn-borrar lnkBlock" } })';
                        },
                    },
                    {
                        "sName": "CambiarContra",
                        "sClass": "column-icon",
                        "sDefaultContent": "",
                        "bSearchable": false,
                        "bSortable": false,
                        "fnRender": function (oObj) {
                            return '@Html.ActionGridActionLink(Actions.ReportsUsersChangePassword, "<i class=\"fa fa-lock\"></i>", new Dictionary<string, object> { { "Class", "btn-changepassword" } })';
                        }
                    }
                ],
                '@Url.Action("AjaxHandler", "ReportsUser")',
                externalFilters, null,
                [[0, "desc"]]
            );
        }

        $("#execute").click(function (e) {
            e.preventDefault();
            drawTable();
            dataTableFilters.fnFilter();
        });

        $('table').on("click", ".lnkBlock", function (e) {
            if (!$(this).hasClass("disabled")) {
                e.preventDefault();
                $('#ModalTitle').html("@PresentationCoreMessages.Common_Block_User");
                block($(this));
            }
        });

        $('table').on("click", ".lnkUnBlock", function (e) {
            if (!$(this).hasClass("disabled")) {
                e.preventDefault();
                $('#ModalTitle').html("@PresentationCoreMessages.Common_Unblock_User");
                block($(this));
            }
        });

        $('table').on("click", ".btn-changepassword", function (e) {
            if (!$(this).hasClass("disabled")) {
                e.preventDefault();
                var lb = $('#lbChangePassword');
                var url = $(this).attr("href").split('/');
                $("#UserId", lb).val(url[url.length - 1]);
                $("#NewPassword", lb).val("");
                $("#ConfirmPassword", lb).val("");
                lb.modal();
            }
        });

        function block(obj) {
            tr = obj.parents("tr");
            var lb = $('#lbConfirmBlock');
            var url = obj.attr("href").split('/');
            $("#lbBlockHiddenUrl", lb).val("ReportsUser/ChangeBlockStatusUser/" + url[url.length - 1]);
            lb.modal();
        }

    });

</script>