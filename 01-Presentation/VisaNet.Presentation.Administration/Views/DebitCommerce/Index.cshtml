@using VisaNet.Common.Resource.Presentation
@using VisaNet.Common.Security.Entities.Enums
@using VisaNet.Presentation.Administration.MvcHtmlHelpers
@model VisaNet.CustomerSite.EntitiesDtos.TableFilters.CustomerSiteCommerceFilterDto

@{
    ViewBag.Title = "Index";
}
<h2>Comercio de Debito - Listado</h2>

<div class="row">
    <div class="col-md-3">
        <label>@PresentationAdminStrings.Service_ServiceName</label>
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control w100", autocomplete = "off" })
    </div>
</div>

<div class="row">
    <div class="col-md-2">
        <a class="btn btn-default btn-standar mt10 w100" id="execute">@PresentationAdminStrings.Common_Search</a>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <h2></h2>
        <div class="table-responsive">
            <table class="table table-striped table-bordered table-hover tablesorter">
                <thead>
                    <tr>
                        <th>@PresentationAdminStrings.Service <i class=""></i></th>
                        <th>Categoría<i class=""></i></th>
                        <th>Productos <i class=""></i></th>
                        <th>Servicio VNP<i class=""></i></th>
                        <th><i class=""></i>Detalle</th>
                        <th><i class=""></i>Editar</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {

        function externalFilters(aoData) {
            aoData.push({ "name": "Name", "value": $("#@Html.IdFor(m => m.Name)").val() });
        }

        dataTableFilters = applyDatatableExternalFilters($('table'),
            [0],
            [
            { "mDataProp": "Name" },
            { "mDataProp": "CommerceCathegoryName", "bSortable": false, },
            { "mDataProp": "ProductsCount", "bSortable": false, },
            {
                "sName": "ServiceName",
                "sDefaultContent": "",
                "bSearchable": false,
                "bSortable": false,
                "fnRender": function (oObj) {
                    if (oObj.aData.Container === 1) {
                        return "<a target='_blank' href='@Url.Action("Index", "ServiceContainer")/Index?ServiceName=" + oObj.aData.ServiceName + "'>" + oObj.aData.ServiceName + "</a>";
                    }else
                    {
                        return "<a target='_blank' href='@Url.Action("Index", "Service")/Index?ServiceName=" + oObj.aData.ServiceName + "'>" + oObj.aData.ServiceName + "</a>";
                    }
                }
            },
            {
                "sName": "Details",
                "sClass": "column-icon",
                "sDefaultContent": "",
                "bSearchable": false,
                "bSortable": false,
                "fnRender": function (oObj) {
                    return '@Html.ActionGridActionLink(Actions.DebitCommerceDetails, "<i class=\"fa fa-search\"></i>", new Dictionary<string, object> { { "Class", "btn-editar" } })';
                }
            },
            {
                "sName": "Details",
                "sClass": "column-icon",
                "sDefaultContent": "",
                "bSearchable": false,
                "bSortable": false,
                "fnRender": function (oObj) {
                    return '@Html.ActionGridActionLink(Actions.DebitCommerceEdit, "<i class=\"fa fa-edit\"></i>", new Dictionary<string, object> { { "Class", "btn-change" } })';
                }
            }
            ],
            '@Url.Action("AjaxHandler", "DebitCommerce")', externalFilters, null, [[0, "asc"]]
        );

        $("#execute").click(function (e) {
            e.preventDefault();
            dataTableFilters.fnFilter();
        });

    });

</script>