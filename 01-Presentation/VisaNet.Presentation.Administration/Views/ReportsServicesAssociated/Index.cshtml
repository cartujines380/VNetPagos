@using VisaNet.Common.Resource.Presentation
@model VisaNet.Domain.EntitiesDtos.TableFilters.ReportsServicesAssociatedFilterDto

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@PresentationAdminStrings.Reports_ServicesAssociated_Title</h2>

@using (Html.BeginForm("ExcelExport", "ReportsServicesAssociated", FormMethod.Post, new { id = "frmExcel", autocomplete = "off" }))
{
    <div class="row">
        <div class="col-md-3">
            <label>@PresentationAdminStrings.CreationDateFrom</label>
            @Html.EditorFor(m => m.CreationDateFrom, new { @class = "form-control w100" })
        </div>
        <div class="col-md-3">
            <label>@PresentationAdminStrings.CreationDateTo</label>
            @Html.EditorFor(m => m.CreationDateTo, new { @class = "form-control w100" })
        </div>
        <div class="col-md-3">
            <label>@PresentationAdminStrings.Filters_Status</label>
            <div class="selectMask w100">
                @Html.DropDownListFor(m => m.Enabled, (IEnumerable<SelectListItem>)ViewBag.ServiceStatus, new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "form-control" } })
            </div>
        </div>
        <div class="col-md-3">
            <label>@PresentationAdminStrings.Filters_Email</label>
            @Html.TextBoxFor(m => m.ClientEmail, new { @class = "form-control w100", placeholder = "Ingrese el correo electrónico a buscar" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            <label>@PresentationAdminStrings.Filters_Name</label>
            @Html.TextBoxFor(m => m.ClientName, new { @class = "form-control w100", placeholder = "Ingrese el nombre a buscar" })
        </div>
        <div class="col-md-3">
            <label>@PresentationAdminStrings.Filters_Surname</label>
            @Html.TextBoxFor(m => m.ClientSurname, new { @class = "form-control w100", placeholder = "Ingrese el apellido a buscar" })
        </div>
        <div class="col-md-3">
            <label>@PresentationAdminStrings.Filters_ServiceAssociated (Nombre - Descripci&oacute;n)</label>
            @Html.TextBoxFor(m => m.ServiceNameAndDesc, new { @class = "form-control w100", placeholder = "Ingrese el nombre servicio - descripción a buscar" })
        </div>
        <div class="col-md-3">
            <label>@PresentationAdminStrings.Filters_ServiceCategory</label>
            <div class="selectMask w100">
                @Html.DropDownListFor(m => m.ServiceCategoryId, (IEnumerable<SelectListItem>)ViewBag.ServiceCategories, PresentationAdminStrings.Filters_ServiceCategory_Placeholder, new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "form-control" } })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <label>@PresentationAdminStrings.Filters_AutomaticPayment</label>
            <div class="selectMask w100">
                @Html.DropDownListFor(m => m.HasAutomaticPayment, (IEnumerable<SelectListItem>)ViewBag.HasAutomaticPayment, new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "form-control" } })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-2">
            <a class="btn btn-default btn-standar mt10 w100" id="execute">@PresentationAdminStrings.Common_Search</a>
        </div>

        <div class="col-md-2">
            <input class="btn btn-default btn-standar mt10 w100" type="submit" formnovalidate value="@PresentationCoreMessages.Common_Export">
        </div>
    </div>
}

<div class="row">
    <div class="col-lg-12">
        <h2></h2>
        <div class="table-responsive">
            <table id="table" class="table table-bordered table-striped table-hover tablesorter">
                <thead>
                    <tr>
                        <th>
                            Usuario
                        </th>
                        <th>
                            Nombre
                        </th>
                        <th>
                            Apellido
                        </th>
                        <th>
                            Servicio asociado
                        </th>
                        <th>
                            Categor&iacute;a de servicio
                        </th>
                        <th>
                            N&uacute;mero de referencia
                        </th>
                        <th>
                            Estado
                        </th>
                        <th>
                            Eliminado
                        </th>
                        <th>
                            Pago autom&aacute;tico
                        </th>
                        <th>
                            Tarjeta por defecto
                        </th>
                        <th>
                            Cant. pagos realizados
                        </th>
                        <th>
                            Fecha de creaci&oacute;n
                        </th>
                        <th>
                            Fecha de modificaci&oacute;n
                        </th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript">
    var dataTableFilters;

    $(document).ready(function () {

        function externalFilters(aoData) {
            aoData.push({ "name": "CreationDateFrom", "value": $("#@Html.IdFor(m => m.CreationDateFrom)").val() });
            aoData.push({ "name": "CreationDateTo", "value": $("#@Html.IdFor(m => m.CreationDateTo)").val() });
            aoData.push({ "name": "ClientEmail", "value": $("#@Html.IdFor(m => m.ClientEmail)").val() });
            aoData.push({ "name": "ClientName", "value": $("#@Html.IdFor(m => m.ClientName)").val() });
            aoData.push({ "name": "ClientSurname", "value": $("#@Html.IdFor(m => m.ClientSurname)").val() });
            aoData.push({ "name": "ServiceNameAndDesc", "value": $("#@Html.IdFor(m => m.ServiceNameAndDesc)").val() });
            aoData.push({ "name": "ServiceCategoryId", "value": $("#@Html.IdFor(m => m.ServiceCategoryId)").val() });
            aoData.push({ "name": "Enabled", "value": $("#@Html.IdFor(m => m.Enabled)").val() });
            @*aoData.push({ "name": "Deleted", "value": $("#@Html.IdFor(m => m.Deleted)").val() });*@
            aoData.push({ "name": "HasAutomaticPayment", "value": $("#@Html.IdFor(m => m.HasAutomaticPayment)").val() });
        }

        function drawTable() {
            dataTableFilters = applyDatatableExternalFilters($('#table'),
                null,
                [
                    { "mDataProp": "ClientEmail" },
                    { "mDataProp": "ClientName" },
                    { "mDataProp": "ClientSurname" },
                    { "mDataProp": "ServiceNameAndDesc" },
                    { "mDataProp": "ServiceCategory" },
                    { "mDataProp": "ReferenceNumber" },
                    { "mDataProp": "Enabled" },
                    { "mDataProp": "Active" },
                    {
                        "mDataProp": "AutomaticPayment",
                        "fnRender": function (a) {
                            if (a.aData.AutomaticPayment != "No") {
                                return "<a target='_blank' href='@Url.Action("Index", "ReportsAutomaticPayments")?ServiceAssociatedId=" + a.aData.ServiceAssociatedId + "'>" + a.aData.AutomaticPayment + "</a>";
                            } else {
                                return a.aData.AutomaticPayment;
                            }
                        }
                    },
                    {
                        "mDataProp": "DefaultCardMask",
                        "fnRender": function (a) {
                            return "<a target='_blank' href='@Url.Action("Index", "ReportsCards")?Email=" + a.aData.ClientEmail + "&CardMask=" + a.aData.DefaultCardMask + "'>" + a.aData.DefaultCardMask + "</a>";
                        }
                    },
                    {
                        "mDataProp": "PaymentsCount",
                        "fnRender": function (a) {
                            if (a.aData.PaymentsCount != 0) {
                                return "<a target='_blank' href='@Url.Action("Index", "ReportsTransactions")?ServiceAssociatedId=" + a.aData.ServiceAssociatedId + "'>" + a.aData.PaymentsCount + "</a>";
                            } else {
                                return a.aData.PaymentsCount;
                            }
                        }
                    },
                    { "mDataProp": "CreationDate" },
                    {
                        "mDataProp": "LastModificationDate",
                        "fnRender": function (a) {
                            return "<a target='_blank' href='@Url.Action("ChangeLog", "Audit")?Email=" + a.aData.ClientEmail + "&TableName=ServicesAssociated'>" + a.aData.LastModificationDate + "</a>";
                        }
                    }
                ],
                '@Url.Action("AjaxHandler", "ReportsServicesAssociated")',
                externalFilters,
                [[0, "asc"]]);
        }

        $("#execute").click(function (e) {
            e.preventDefault();
            drawTable();
            dataTableFilters.fnFilter();
        });

    });

</script>
