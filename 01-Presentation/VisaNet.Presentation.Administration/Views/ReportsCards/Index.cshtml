@using VisaNet.Common.Resource.Enums
@using VisaNet.Common.Resource.Helpers
@using VisaNet.Common.Resource.Presentation
@using VisaNet.Common.Security.Entities.Enums
@using VisaNet.Domain.EntitiesDtos.Enums
@using VisaNet.Presentation.Administration.MvcHtmlHelpers
@model VisaNet.Domain.EntitiesDtos.TableFilters.ReportsCardsFilterDto

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@PresentationAdminStrings.Reports_Cards_Title</h2>

@using (Html.BeginForm("ExcelExport", "ReportsCards", FormMethod.Post, new { id = "frmExcel", autocomplete = "off" }))
{
    <div class="row">
        <div class="col-md-3">
            <label>@PresentationAdminStrings.Filters_Email</label>
            @Html.TextBoxFor(m => m.ClientEmail, new { @class = "form-control w100", placeholder = "Ingrese el correo electrónico a buscar" })
        </div>
        <div class="col-md-3">
            <label>@PresentationAdminStrings.Filters_Name</label>
            @Html.TextBoxFor(m => m.ClientName, new { @class = "form-control w100", placeholder = "Ingrese el nombre a buscar" })
        </div>
        <div class="col-md-3">
            <label>@PresentationAdminStrings.Filters_Surname</label>
            @Html.TextBoxFor(m => m.ClientSurname, new { @class = "form-control w100", placeholder = "Ingrese el apellido a buscar" })
        </div>
        <div class="col-md-3">
            <label>@PresentationAdminStrings.Filters_MaskedNumber</label>
            @Html.TextBoxFor(m => m.CardMaskedNumber, new { @class = "form-control w100", placeholder = "Ingrese el número de tarjeta a buscar" })
        </div>
    </div>
    <div class="row">
        <div class="col-md-3">
            <label>@PresentationAdminStrings.Filters_Bin</label>
            <div class="selectMask w100">
                @Html.TextBoxFor(m => m.CardBin, new { @class = "form-control w100", placeholder = "Ingrese el bin a buscar" })
            </div>
        </div>
        <div class="col-md-3">
            <label>@PresentationAdminStrings.Filters_CardType</label>
            <div class="selectMask w100">
                @Html.DropDownListFor(m => m.CardType,
                                   EnumHelpers.ConvertToSelectList(typeof(CardTypeDto), EnumsStrings.ResourceManager),
                                   PresentationAdminStrings.Filters_CardType_Placeholder,
                                   new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "form-control" } })
            </div>
        </div>
        <div class="col-md-3">
            <label>@PresentationAdminStrings.Filters_Status</label>
            <div class="selectMask w100">
                @Html.DropDownListFor(m => m.CardState, (IEnumerable<SelectListItem>)ViewBag.CardStatus,
                                   new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "form-control" } })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-2">
            <a class="btn btn-default btn-standar mt10 w100" id="execute">@PresentationAdminStrings.Common_Search</a>
        </div>
        <div class="col-md-2">
            <input class="btn btn-default btn-standar mt10 w100" type="submit" formnovalidate value="@PresentationCoreMessages.Common_Export">
        </div>
    </div>
}

<div class="row">
    <div class="col-lg-12">
        <h2></h2>
        <div class="table-responsive">
            <table id="table" class="table table-bordered table-striped table-hover tablesorter">
                <thead>
                    <tr>
                        <th>
                            @PresentationAdminStrings.Email
                        </th>
                        <th>
                            @PresentationAdminStrings.Name
                        </th>
                        <th>
                            @PresentationAdminStrings.Filters_Surname
                        </th>
                        <th>
                            @PresentationAdminStrings.Filters_MaskedNumber
                        </th>
                        <th>
                            Vencimiento
                        </th>
                        <th>
                            @PresentationAdminStrings.Bin
                        </th>
                        <th>
                            @PresentationAdminStrings.CardType
                        </th>
                        <th>
                            @PresentationAdminStrings.Promotion_Active
                        </th>
                        <th>
                            Eliminada
                        </th>
                        <th>
                            Estado en CS
                        </th>
                        <th>
                            Servicios asociados
                        </th>
                        <th>
                            Fecha ultimo pago
                        </th>
                        <th>
                            Eliminar en CS
                        </th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript">
    var dataTableFilters;

    $(document).ready(function () {

        function externalFilters(aoData) {
            aoData.push({ "name": "ClientEmail", "value": $("#@Html.IdFor(m => m.ClientEmail)").val() });
            aoData.push({ "name": "ClientName", "value": $("#@Html.IdFor(m => m.ClientName)").val() });
            aoData.push({ "name": "ClientSurname", "value": $("#@Html.IdFor(m => m.ClientSurname)").val() });
            aoData.push({ "name": "CardMaskedNumber", "value": $("#@Html.IdFor(m => m.CardMaskedNumber)").val() });
            aoData.push({ "name": "CardBin", "value": $("#@Html.IdFor(m => m.CardBin)").val() });
            aoData.push({ "name": "CardType", "value": $("#@Html.IdFor(m => m.CardType)").val() });
            aoData.push({ "name": "CardState", "value": $("#@Html.IdFor(m => m.CardState)").val() });
        }

        function drawTable() {
            dataTableFilters = applyDatatableExternalFilters($('#table'),
                null,
                [
                    { "mDataProp": "ClientEmail" },
                    { "mDataProp": "ClientName" },
                    { "mDataProp": "ClientSurname" },
                    { "mDataProp": "CardMaskedNumber" },
                    { "mDataProp": "CardDueDate" },
                    { "mDataProp": "CardBin" },                    
                    { "mDataProp": "CardType" },
                    { "mDataProp": "CardActive" },
                    { "mDataProp": "CardDeleted" },
                    {
                        "sName": "DeletedFromCs",
                        "sClass": "column-icon",
                        //esto le indica que no lo mapee con el array
                        "sDefaultContent": "",
                        "bSearchable": false,
                        "bSortable": false,
                        "fnRender": function (oObj) {
                            if (oObj.aData.DeletedFromCs) {
                                return 'Eliminada';
                            }
                            else {
                                return 'Activa';
                            }
                        },
                    },
                    { "mDataProp": "NumServicesAsociated" },
                    { "mDataProp": "LastPaymentDate" },
                    {
                        "sName": "Eliminar",
                        "sClass": "column-icon",
                        //esto le indica que no lo mapee con el array
                        "sDefaultContent": "",
                        "bSearchable": false,
                        "bSortable": false,
                        "fnRender": function (oObj) {
                            if (!oObj.aData.DeletedFromCs) {
                                return "<a href='@Url.Action("DeleteCard","ReportsCards")?cardId=" + oObj.aData.CardId + "&userId=" + oObj.aData.ApplicationUserId + "' class='btn-borrar lnkUnBlock'><i class=\"fa fa-toggle-on fa-2x\"></i></a>";
                            }

                        },
                    }
                ],
                '@Url.Action("AjaxHandler", "ReportsCards")',
                externalFilters,
                null,
                [[0, "asc"]]);
        }

        $("#execute").click(function (e) {
            e.preventDefault();
            drawTable();
            dataTableFilters.fnFilter();
        });

    });

</script>