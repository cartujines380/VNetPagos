@using VisaNet.Common.Resource.Enums
@using VisaNet.Common.Resource.Helpers
@using VisaNet.Common.Resource.Presentation
@using VisaNet.Common.Security.Entities.Enums
@using VisaNet.Domain.EntitiesDtos
@using VisaNet.Domain.EntitiesDtos.Enums
@using VisaNet.Presentation.Administration.MvcHtmlHelpers

@model VisaNet.Domain.EntitiesDtos.TableFilters.ReportsEmailsFilterDto

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@PresentationAdminStrings.Reports_Email_Title</h2>

<div class="row">
    <div class="col-md-3">
        <label>@PresentationAdminStrings.From</label>
        @Html.EditorFor(m => m.DateFrom, new { @class = "form-control w100" })
    </div>
    <div class="col-md-3">
        <label>@PresentationAdminStrings.To</label>
        @Html.EditorFor(m => m.DateTo, new { @class = "form-control w100" })
    </div>
    <div class="col-md-3">
        <label>@PresentationAdminStrings.Status</label>
        <div class="selectMask w100">
            <div class="selectMask w100">
                @Html.DropDownListFor(m => m.Status, EnumHelpers.ConvertToSelectList(typeof(MailgunStatusDto), EnumsStrings.ResourceManager), PresentationAdminStrings.Filters_MailgunStatus_Placeholder, new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "form-control" } })
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <label>@PresentationAdminStrings.EmailType</label>
        <div class="selectMask w100">
            <div class="selectMask w100">
                @Html.DropDownListFor(m => m.EmailType, EnumHelpers.ConvertToSelectList(typeof(EmailTypeDto), EnumsStrings.ResourceManager), PresentationAdminStrings.Filters_EmailType_Placeholder, new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "form-control" } })
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-3">
        <label>@PresentationAdminStrings.Filters_Email</label>
        <div class="selectMask w100">
            @Html.TextBoxFor(m => m.To, new { @class = "form-control w100", @placeholder = "Ingrese el correo electrónico a buscar", autocomplete = "off" })
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-2">
        <a class="btn btn-default btn-standar mt10 w100" id="execute">@PresentationAdminStrings.Common_Search</a>
    </div>
    <div class="col-md-2 pull-right">
        @Html.ActionActionLink(Actions.ReportsMailsResendAll, PresentationAdminStrings.EmailResendAll, new Dictionary<string, object> { { "Class", "btn btn-visa btn-standar mt10 w100" }, { "id", "resendAll" } })
        @Html.ActionActionLink(Actions.ReportsMailsResendAll, PresentationAdminStrings.CheckEmailsStatus, new Dictionary<string, object> { { "Class", "btn btn-visa btn-standar mt10 w100" }, { "id", "checkStatus" } })
    </div>
</div>

<div class="loadingMessaje hidden" id="loaderMessage">
    <div class="loading">@PresentationAdminStrings.Loading</div>
</div>

<div class="row">
    <div class="col-lg-12">
        <h2></h2>
        <div class="table-responsive">
            <table id="table" class="table table-bordered table-striped table-hover tablesorter">
                <thead>
                    <tr>
                        <th>
                            @PresentationAdminStrings.Date
                        </th>
                        <th>
                            @PresentationAdminStrings.Status
                        </th>
                        <th>
                            @PresentationAdminStrings.EmailType
                        </th>
                        <th>
                            @PresentationAdminStrings.Email
                        </th>
                        <th>
                            @PresentationAdminStrings.MailgunErrorDescription
                        </th>
                        <th>
                            @PresentationAdminStrings.Cancel
                        </th>
                        <th>
                            @PresentationAdminStrings.EmailPreview
                        </th>
                        <th>
                            @PresentationAdminStrings.EmailResend
                        </th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

@Html.Partial("_CancelLightbox")
@Html.Partial("_PreviewLightbox", new EmailMessageDto())
@Html.Partial("_resendAllLightbox")
@Html.Partial("_CheckStatusLightBox")

<script type="text/javascript">
    var dataTableFilters;

    $(document).ready(function () {

        function externalFilters(aoData) {
            aoData.push({ "name": "DateFrom", "value": $("#@Html.IdFor(m => m.DateFrom)").val() });
            aoData.push({ "name": "DateTo", "value": $("#@Html.IdFor(m => m.DateTo)").val() });
            aoData.push({ "name": "Status", "value": $("#@Html.IdFor(m => m.Status)").val() });
            aoData.push({ "name": "EmailType", "value": $("#@Html.IdFor(m => m.EmailType)").val() });
            aoData.push({ "name": "To", "value": $("#@Html.IdFor(m => m.To)").val() });
        }

        function drawTable() {
            dataTableFilters = applyDatatableExternalFilters($('#table'),
                null,
                [
                    { "mDataProp": "Date" },
                    { "mDataProp": "Status" },
                    { "mDataProp": "Type" },
                    { "mDataProp": "EmailAdress" },
                    { "mDataProp": "MailgunErrorDescription", "bSortable": false },
                    {
                        "sName": "Cancel",
                        "sClass": "column-icon",
                        //esto le indica que no lo mapee con el array
                        "sDefaultContent": "",
                        "bSearchable": false,
                        "bSortable": false,
                        "fnRender": function (oObj) {
                            return oObj.aData.StatusCancelable ?
                                '@Html.ActionGridActionLink(Actions.ReportsMailsCancel, "<i class=\"fa fa-times-circle-o\"></i>", new Dictionary<string, object> {{"Class", "btn-borrar lnkDelete"}})' : "";
                        }
                    },
                    {
                        "sName": "Preview",
                        "sClass": "column-icon",
                        //esto le indica que no lo mapee con el array
                        "sDefaultContent": "",
                        "bSearchable": false,
                        "bSortable": false,
                        "fnRender": function (oObj) {
                            return '@Html.ActionGridActionLink(Actions.ReportsMailsDetails, "<i class=\"fa fa-search\"></i>", new Dictionary<string, object> {{"Class", "lnkPreview"}})';
                        }
                    },
                    {
                        "sName": "Resend",
                        "sClass": "column-icon",
                        //esto le indica que no lo mapee con el array
                        "sDefaultContent": "",
                        "bSearchable": false,
                        "bSortable": false,
                        "fnRender": function (oObj) {
                            return '@Html.ActionGridActionLink(Actions.ReportsMailsDetails, "<i class=\"fa fa-share\"></i>", new Dictionary<string, object> {{"Class", "lnkResend"}})';
                        }
                    }
                ],
                '@Url.Action("AjaxHandler", "ReportsEmail")',
                externalFilters,
                [[0, "desc"]]
            );
        }

        var modalPreviewHandler = function(url, resend) {
            $.ajax({
                type: "GET",
                url: url,
                dataType: 'json',
                success: function (data) {
                    if (data.ResponseType == RESPONSE.SUCCESS) {
                        $('#lbPreviewTitle').html(data.Content.title);
                        $('#lbPreviewTo').html(data.Content.to);
                        $('#lbPreviewBody').html(data.Content.content);
                        var id = data.Content.mailId;
                        $('#lbPreviewHiddenId').val(id);
                        if (data.Content.hasAttachments) {
                            var attachmentsUrl = '@(Url.Action("DownloadAttachment", "ReportsEmail"))' + '/' + id;
                            $("#lbPreviewAttachments").attr("href", attachmentsUrl);
                            $("#lbPreviewAttachments").show();
                        } else {
                            $("#lbPreviewAttachments").attr("href", "#");
                            $("#lbPreviewAttachments").hide();
                        }
                        if (resend) {
                            $('#lbPreviewBtnResend').show();
                        } else {
                            $('#lbPreviewBtnResend').hide();
                        }
                        $("#lbPreview").modal();
                    }
                    if (data.ResponseType == RESPONSE.ERROR) {
                        ShowNotification(data.Title, data.Message, 'error');
                    }
                }
            });
        }

        $("#table").on("click", ".lnkPreview", function (e) {
            e.preventDefault();
            var url = $(this).attr("href");
            if (!$(this).hasClass("disabled")) {
                modalPreviewHandler(url,false);
            }
        });

        $("#table").on("click", ".lnkResend", function (e) {
            e.preventDefault();
            var url = $(this).attr("href");
            if (!$(this).hasClass("disabled")) {
                modalPreviewHandler(url, true);
            }
        });

        $('table').on("click", ".lnkDelete", function (e) {
            e.preventDefault();
            if (!$(this).hasClass("disabled")) {
                var lb = $('#lbConfirmCancelation');
                $("#lbHiddenUrl", lb).val($(this).attr("href"));
                lb.modal();
            }
        });

        $("#resendAll").click(function (e) {
            e.preventDefault();
            if (!$(this).hasClass("disabled")) {
                var lb = $('#lbConfirmResendAll');
                lb.modal();
            }
        });

        $("#checkStatus").click(function (e) {
            e.preventDefault();
            if (!$(this).hasClass("disabled")) {
                var lb = $('#lbConfirmCheckStatus');
                lb.modal();
            }
        });

        $("#execute").click(function (e) {
            e.preventDefault();
            drawTable();
            dataTableFilters.fnFilter();
        });

    });

</script>