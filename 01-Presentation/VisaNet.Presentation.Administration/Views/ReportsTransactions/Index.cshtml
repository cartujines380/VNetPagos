@using VisaNet.Common.Resource.Enums
@using VisaNet.Common.Resource.Helpers
@using VisaNet.Common.Resource.Presentation
@using VisaNet.Common.Security.Entities.Enums
@using VisaNet.Presentation.Administration.MvcHtmlHelpers
@using VisaNet.Domain.EntitiesDtos.Enums
@model VisaNet.Domain.EntitiesDtos.TableFilters.ReportsTransactionsFilterDto

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@PresentationAdminStrings.Reports_Transactions_Title</h2>

@using (Html.BeginForm("ExcelExport", "ReportsTransactions", FormMethod.Post, new { id = "frmExcel", autocomplete = "off" }))
{
    <div class="row">
        <div class="col-md-4">
            <label>@PresentationAdminStrings.From</label>
            @Html.EditorFor(m => m.DateFrom, new { @class = "w100" })
        </div>

        <div class="col-md-4">
            <label>@PresentationAdminStrings.To</label>
            @Html.EditorFor(m => m.DateTo, new { @class = "w100" })
        </div>

        <div class="col-md-4">
            <label>@PresentationAdminStrings.Filters_Email</label>
            <div class="selectMask w100">
                @if (Model != null && Model.ServiceAssociatedId.HasValue)
                {
                    @Html.TextBoxFor(m => m.ClientEmail, new { @class = "form-control w100", @disabled = "disabled" })
                }
                else
                {
                    @Html.TextBoxFor(m => m.ClientEmail, new { @class = "form-control w100", @placeholder = "Ingrese el correo electrónico a buscar" })
                }
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <label>@PresentationAdminStrings.Filters_Name</label>
            <div class="selectMask w100">
                @Html.TextBoxFor(m => m.ClientName, new { @class = "form-control w100", @placeholder = "Ingrese el nombre a buscar" })
            </div>
        </div>

        <div class="col-md-4">
            <label>@PresentationAdminStrings.Filters_Surname</label>
            <div class="selectMask w100">
                @Html.TextBoxFor(m => m.ClientSurname, new { @class = "form-control w100", @placeholder = "Ingrese el apellido a buscar" })
            </div>
        </div>

        <div class="col-md-4">
            <label>@PresentationAdminStrings.Filters_CybersourceTransactionNumber</label>
            <div class="selectMask w100">
                @Html.TextBoxFor(m => m.PaymentTransactionNumber, new { @class = "form-control w100", @placeholder = "Ingrese el número de transacción en Cybersource" })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <label>@PresentationAdminStrings.Filters_GatewayTransactionNumber</label>
            <div class="selectMask w100">
                @Html.TextBoxFor(m => m.PaymentUniqueIdentifier, new { @class = "form-control w100", @placeholder = "Ingrese el número de transacción en pasarela" })
            </div>
        </div>

        <div class="col-md-4">
            <label>@PresentationAdminStrings.Filters_Gateway</label>
            <div class="selectMask w100">
                <div class="selectMask w100">
                    @Html.DropDownListFor(m => m.GatewayId, (IEnumerable<SelectListItem>)ViewBag.Gateways,
                        PresentationAdminStrings.Filters_Gateway_Placeholder,
                        new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" },
                        { "class", "search_init form-control" } })
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <label>@PresentationAdminStrings.Filters_PaymentType</label>
            <div class="selectMask w100">
                @Html.DropDownListFor(m => m.PaymentType,
                    EnumHelpers.ConvertToSelectList(typeof(PaymentTypeDto), EnumsStrings.ResourceManager),
                    PresentationAdminStrings.Filters_PaymentType_Placeholder,
                    new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "search_init form-control" } })
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-4">
            <label>@PresentationAdminStrings.Filters_Service</label>
            <div class="selectMask w100">
                @if (Model != null && Model.ServiceAssociatedId.HasValue)
                {
                    @Html.DropDownListFor(m => m.ServiceId,
                        (IEnumerable<SelectListItem>)ViewBag.Services,
                        PresentationAdminStrings.Filters_Service_Placeholder,
                        new Dictionary<string, object> { { "style", "width: 100%; height: 100%" }, { "class", "search_init form-control" }, { "disabled", "disabled" } })
                }
                else
                {
                    @Html.DropDownListFor(m => m.ServiceId,
                        (IEnumerable<SelectListItem>)ViewBag.Services,
                        PresentationAdminStrings.Filters_Service_Placeholder,
                        new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "search_init form-control" } })
                }
            </div>
        </div>

        <div class="col-md-4">
            <label>@PresentationAdminStrings.Filters_ServiceCategory</label>
            <div class="selectMask w100">
                @Html.DropDownListFor(m => m.ServiceCategoryId,
                    (IEnumerable<SelectListItem>)ViewBag.ServiceCategories,
                    PresentationAdminStrings.Filters_ServiceCategory_Placeholder,
                    new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "search_init form-control" } })
            </div>
        </div>

        <div class="col-md-2">
            <label>@PresentationAdminStrings.Filters_PaymentStatus</label>
            <div class="selectMask w100">
                @Html.DropDownListFor(m => m.PaymentStatus,
                    (IEnumerable<SelectListItem>)ViewBag.PaymentStatus,
                    PresentationAdminStrings.Filters_PaymentStatus_Placeholder,
                    new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "search_init form-control" } })
            </div>
        </div>
        <div class="col-md-2">
            <label>@PresentationAdminStrings.Filters_PaymentPlatform</label>
            <div class="selectMask w100">
                @Html.DropDownListFor(m => m.Platform,
                    (IEnumerable<SelectListItem>)ViewBag.PaymentPlataform,
                    PresentationAdminStrings.Filters_PaymentPlatform_Placeholder,
                    new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "search_init form-control" } })
            </div>
        </div>
    </div>

    if (Model != null && Model.ServiceAssociatedId.HasValue)
    {
        @Html.HiddenFor(m => m.ServiceAssociatedId)
        <div class="row">
            <div class="col-md-4">
                <label>@PresentationAdminStrings.Filters_ServiceAssociated (Nombre - Descripci&oacute;n)</label>
                <div class="selectMask w100">
                    <input type="text" class="form-control w100" disabled="disabled" value="@ViewBag.ServiceNameAndDesc" />
                </div>
            </div>
        </div>
    }

    <div class="row">
        <div class="col-md-2">
            <a class="btn btn-default btn-standar mt10 w100" id="execute">@PresentationAdminStrings.Common_Search</a>
        </div>
        <div class="col-md-2">
            <input class="btn btn-default btn-standar mt10 w100" type="submit" id="export" formnovalidate value="@PresentationCoreMessages.Common_Export">
        </div>
    </div>
}

<div class="loadingMessaje hidden" id="loaderMessage">
    <div class="loading">@PresentationAdminStrings.Loading</div>
</div>

<div class="row">
    <div class="col-lg-12">
        <h2></h2>
        <div class="table-responsive">
            <table id="table" class="table table-bordered table-striped table-hover tablesorter">
                <thead>
                    <tr>
                        <th>
                            Fecha
                        </th>
                        <th>
                            Correo electr&oacute;nico
                        </th>
                        <th>
                            Nombre
                        </th>
                        <th>
                            Apellido
                        </th>
                        <th>
                            Pasarela de pago
                        </th>
                        <th>
                            Tipo
                        </th>
                        <th>
                            Servicio
                        </th>
                        <th>
                            Categor&iacute;a de servicios
                        </th>

                        <th>
                            Moneda
                        </th>
                        <th>
                            Monto
                        </th>
                        <th>
                            Monto gravado
                        </th>
                        <th>
                            Monto del descuento
                        </th>
                        <th>
                            N&uacute;mero de transacci&oacute;n en Cybersource
                        </th>
                        <th>
                            N&uacute;mero de transacci&oacute;n en la pasarela
                        </th>
                        <th>
                            Estado
                        </th>
                        <th>
                            Id Operación
                        </th>
                        <th>
                            Descargar
                        </th>
                        <th>
                            Cancelar Trns Cs
                        </th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

@Html.Partial("_CancelLightbox")

<script type="text/javascript">
    var dataTableFilters;

    $(document).ready(function () {

        var autoExec = '@ViewBag.AutoExecute';

        

        function externalFilters(aoData) {
            aoData.push({ "name": "DateFrom", "value": $("#@Html.IdFor(m => m.DateFrom)").val() });
            aoData.push({ "name": "DateTo", "value": $("#@Html.IdFor(m => m.DateTo)").val() });
            aoData.push({ "name": "ClientEmail", "value": $("#@Html.IdFor(m => m.ClientEmail)").val() });
            aoData.push({ "name": "ClientName", "value": $("#@Html.IdFor(m => m.ClientName)").val() });
            aoData.push({ "name": "ClientSurname", "value": $("#@Html.IdFor(m => m.ClientSurname)").val() });
            aoData.push({ "name": "PaymentTransactionNumber", "value": $("#@Html.IdFor(m => m.PaymentTransactionNumber)").val() });
            aoData.push({ "name": "PaymentUniqueIdentifier", "value": $("#@Html.IdFor(m => m.PaymentUniqueIdentifier)").val() });
            aoData.push({ "name": "GatewayId", "value": $("#@Html.IdFor(m => m.GatewayId)").val() });
            aoData.push({ "name": "PaymentType", "value": $("#@Html.IdFor(m => m.PaymentType)").val() });
            aoData.push({ "name": "ServiceId", "value": $("#@Html.IdFor(m => m.ServiceId)").val() });
            aoData.push({ "name": "ServiceCategoryId", "value": $("#@Html.IdFor(m => m.ServiceCategoryId)").val() });
            aoData.push({ "name": "PaymentStatus", "value": $("#@Html.IdFor(m => m.PaymentStatus)").val() });
            aoData.push({ "name": "ServiceAssociatedId", "value": $("#@Html.IdFor(m => m.ServiceAssociatedId)").val() });
            aoData.push({ "name": "Platform", "value": $("#@Html.IdFor(m => m.Platform)").val() });
        }

        function drawTable() {
            dataTableFilters = applyDatatableExternalFilters($('#table'),
            null,
            [
                { "mDataProp": "Date" },
                { "mDataProp": "ClientEmail" },
                { "mDataProp": "ClientName" },
                { "mDataProp": "ClientSurname" },
                { "mDataProp": "Gateway" },
                { "mDataProp": "PaymentType" },
                { "mDataProp": "ServiceName" },
                { "mDataProp": "ServiceCategoryName" },
                { "mDataProp": "BillCurrency" },
                { "mDataProp": "BillAmount" },
                { "mDataProp": "BillTaxedAmount" },
                { "mDataProp": "BillDiscountAmount" },
                { "mDataProp": "TransactionNumber" },
                { "mDataProp": "UniqueIdentifier" },
                { "mDataProp": "PaymentStatus" },
                {
                    "sClass": "",
                    "sDefaultContent": "",
                    "bSearchable": false,
                    "bSortable": false,
                    "fnRender": function (oObj) {
                        if (oObj.aData.WsBillPaymentOnlinesOperationId !== null && oObj.aData.WsBillPaymentOnlinesOperationId !== '') {
                            return '<a href="@Url.Action("Index", "ReportsIntegration")?IdOperation=' + oObj.aData.WsBillPaymentOnlinesOperationId + '&Type=4">'
                                + oObj.aData.WsBillPaymentOnlinesOperationId + '</a>';
                        }
                        if (oObj.aData.WebhookRegistrationsOperationId !== null && oObj.aData.WebhookRegistrationsOperationId !== '') {
                            return '<a href="@Url.Action("Index", "ReportsIntegration")?IdOperation=' + oObj.aData.WebhookRegistrationsOperationId + '&Type=3">'
                                + oObj.aData.WebhookRegistrationsOperationId + '</a>';
                        }
                        return '';
                    }
                },
                {
                    "sClass": "column-icon",
                    "sDefaultContent": "",
                    "bSearchable": false,
                    "bSortable": false,
                    "fnRender": function (a) {
                        return "<a target='_blank' href='@Url.Action("DownloadTicket", "ReportsTransactions")/?" + "id=" + a.aData.Id + "&transactionNumber=" + a.aData.TransactionNumber + "'><i class='fa fa-file-text'></i></a>";
                    }
                },
                {
                    "sClass": "column-icon",
                    "sDefaultContent": "",
                    "bSearchable": false,
                    "bSortable": false,
                    "fnRender": function (oObj) {
                        if (oObj.aData.PaymentStatusVal === 0 || oObj.aData.PaymentStatusVal === 4) {
                            return '@Html.ActionGridActionLink(Actions.ReportsTransactionCancellation, "<i class=\"fa fa-power-off\"></i>", new Dictionary<string, object> { { "Class", "btn-cancel" } })';
                        }
                    }
                }
            ],
            '@Url.Action("AjaxHandler", "ReportsTransactions")',
            externalFilters,
            [[0, "desc"]]);
        }

        if (autoExec == 'True') {
            drawTable();
            dataTableFilters.fnFilter();
        }

        $("#execute").click(function (e) {
            e.preventDefault();
            drawTable();
            dataTableFilters.fnFilter();
        });

        $("#export").click(function (e) {
            e.preventDefault();
            $('#loaderMessage').removeClass("hidden");
            $.ajax({
                dataType: 'json',
                type: "POST",
                url: "@Url.Action("ExcelExport", "ReportsTransactions")",
                data: $("#frmExcel").serialize(),
                success: function (ret) {
                    if (ret.ResponseType == RESPONSE.SUCCESS) {
                        $('#loaderMessage').addClass("hidden");
                        window.location = '@Url.Action("DownloadExcel", "ReportsTransactions")' + "?filename=" + ret.Content;
                    }
                }
            });
        });

        $("#lnkDeleteAccept").click(function (e) {
            e.preventDefault();
            var notify = $("#notify").is(":checked");
            $.ajax({
                type: "POST",
                url: $("#lbHiddenUrl").val(),
                data: "Notify=" + notify,
                dataType: 'json',
                success: function (data) {
                    if (data.ResponseType == RESPONSE.SUCCESS) {
                        $('#lbConfirmDelete').modal("hide");
                        ShowNotification(data.Title, data.Message, 'success');
                        dataTableFilters.fnFilter();
                    }
                    if (data.ResponseType == RESPONSE.ERROR) {
                        $('#lbConfirmDelete').modal("hide");
                        ShowNotification(data.Title, data.Message, 'error');
                    }
                },
                fail: function () {
                    window.location.replace('@Url.Action("Index", "Error")');
                }
            });
        });

        $('table').on("click", "a.btn-cancel", function (e) {
            if (!$(this).hasClass("disabled")) {
                e.preventDefault();
                tr = $(this).parents("tr");
                var lb = $('#lbConfirmDelete');
                $("#lbHiddenUrl", lb).val($(this).attr("href"));
                lb.modal();
            }
        });
    });

</script>