@using VisaNet.Common.Resource.Presentation
@using VisaNet.Common.Security.Entities.Enums
@using VisaNet.Presentation.Administration.MvcHtmlHelpers
@model VisaNet.Domain.EntitiesDtos.TableFilters.AffiliationCardFilterDto

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@PresentationAdminStrings.AffiliationCards</h2>

<div class="row">
    <div class="col-md-3">
        <label>@PresentationAdminStrings.Name</label>
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control w100", @placeholder = "Ingrese el nombre a buscar" })
    </div>
    <div class="col-md-3">
        <label>@PresentationAdminStrings.Code</label>
        @Html.TextBoxFor(m => m.Code, new { @class = "form-control w100 numeric", @placeholder = "Ingrese el código a buscar" })
    </div>
    <div class="col-md-3">
        <label>@PresentationAdminStrings.Bank</label>
        <div class="selectMask w100">
            @Html.DropDownListFor(m => m.BankId, (IEnumerable<SelectListItem>)ViewBag.Banks, new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "form-control" } })
        </div>
    </div>
    <div class="col-md-3">
        <label>@PresentationAdminStrings.Filters_Status</label>
        <div class="selectMask w100">
            @Html.DropDownListFor(m => m.Active, (IEnumerable<SelectListItem>)ViewBag.ServiceStatus, new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "form-control" } })
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-2">
        <a class="btn btn-default btn-standar mt10 w100" id="execute">@PresentationAdminStrings.Common_Search</a>
    </div>
</div>

<div class="loadingMessaje hidden" id="loaderMessage">
    <div class="loading">@PresentationAdminStrings.Loading</div>
</div>

<div class="row">
    <div class="col-lg-12">
        <h2></h2>
        <div class="table-responsive">
            <table id="table" class="table table-bordered table-striped table-hover tablesorter">
                <thead>
                    <tr>
                        <th>
                            @PresentationAdminStrings.Name
                        </th>
                        <th>
                            @PresentationAdminStrings.Code
                        </th>
                        <th>
                            @PresentationAdminStrings.Bank
                        </th>
                        <th>Estado</th>
                        <th></th>
                        <th></th>
                        <th></th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

@Html.ActionActionLink(Actions.AffiliationCardCreate, "<i class=\"icon-plus\"></i>" + PresentationAdminStrings.Create, new Dictionary<string, object> { { "Class", "btn btn-default" }, { "id", "btnNew" } })

@Html.Partial("_DeleteLightbox")
@Html.Partial("_EditLightbox")

<script type="text/javascript">

    $(document).ready(function () {

        var dataTableFilters;

        function externalFilters(aoData) {
            aoData.push({ "name": "Name", "value": $("#@Html.IdFor(m => m.Name)").val() });
            aoData.push({ "name": "Code", "value": $("#@Html.IdFor(m => m.Code)").val() });
            aoData.push({ "name": "BankId", "value": $("#@Html.IdFor(m => m.BankId)").val() });
            aoData.push({ "name": "Active", "value": $("#@Html.IdFor(m => m.Active)").val() });
        }

        dataTableFilters = applyDatatableExternalFilters($('#table'), null,
            [
                { "mDataProp": "Name" },
                { "mDataProp": "Code" },
                //{ "mDataProp": "BankName" },
                {
                    "sName": "BankName",
                        "sClass": "column-icon",
                        "sDefaultContent": "",
                        "bSearchable": true,
                        "bSortable": true,
                        "fnRender": function (oObj) {
                            return "<a target='_blank' href='@Url.Action("Index", "Bank")?BankName=" + oObj.aData.BankName + "'>" + oObj.aData.BankName + "</a>";
                        }
                    },
                {
                    "sName": "Active",
                    "sClass": "column-icon",
                    "sDefaultContent": "",
                    "bSearchable": false,
                    "bSortable": true,
                    "fnRender": function (oObj) {
                        return oObj.aData.StatusActive ?
                            '@Html.ActionGridActionLink(Actions.AffiliationCardDisable, "<i class=\"fa fa-toggle-on fa-2x\"></i>", new Dictionary<string, object> { { "Class", "btn-change" } })' :
                            '@Html.ActionGridActionLink(Actions.AffiliationCardDisable, "<i class=\"fa fa-toggle-off fa-2x\"></i>", new Dictionary<string, object> { { "Class", "btn-change" } })';
                    }
                },
                {
                    "sName": "Details",
                    "sClass": "column-icon",
                    "sDefaultContent": "",
                    "bSearchable": false,
                    "bSortable": false,
                    "fnRender": function (oObj) {
                        return '@Html.ActionGridActionLink(Actions.AffiliationCardDetails, "<i class=\"fa fa-search\"></i>", new Dictionary<string, object> { { "Class", "btn-editar" } })';
                    }
                },
                {
                    "sName": "Edit",
                    "sClass": "column-icon",
                    "sDefaultContent": "",
                    "bSearchable": false,
                    "bSortable": false,
                    "fnRender": function (oObj) {
                        return '@Html.ActionGridActionLink(Actions.AffiliationCardEdit, "<i class=\"fa fa-edit\"></i>", new Dictionary<string, object> { { "Class", "btn-editar" } })';
                    }
                },
                {
                    "sName": "Borrar",
                    "sClass": "column-icon",
                    //esto le indica que no lo mapee con el array
                    "sDefaultContent": "",
                    "bSearchable": false,
                    "bSortable": false,
                    "fnRender": function (oObj) {
                        return '@Html.ActionGridActionLink(Actions.AffiliationCardDelete, "<i class=\"fa fa-trash-o\"></i>", new Dictionary<string, object> { { "Class", "btn-editar lnkDelete" } })';
                    }
                }
            ],
            '@Url.Action("AjaxHandler", "AffiliationCard")',
            externalFilters, null,
            [[0, "asc"]]
        );

        $("#execute").click(function (e) {
            e.preventDefault();
            dataTableFilters.fnFilter();
        });

        $('table').on("click", ".lnkDelete", function (e) {
            if (!$(this).hasClass("disabled")) {
                e.preventDefault();
                tr = $(this).parents("tr");
                var lb = $('#lbConfirmDelete');
                $("#lbHiddenUrl", lb).val($(this).attr("href"));
                lb.modal();
            }
        });

        $('table').on("click", ".btn-change", function (e) {
            if (!$(this).hasClass("disabled")) {
                e.preventDefault();
                tr = $(this).parents("tr");
                var lb = $('#lbConfirmChange');
                var url = $(this).attr("href").split('/');
                $("#lbChangeHiddenUrl", lb).val("AffiliationCard/ChangeState/" + url[url.length - 1]);
                lb.modal();
            }
        });

    });

</script>