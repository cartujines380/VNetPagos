@using VisaNet.Common.Resource.Enums
@using VisaNet.Common.Resource.Helpers
@using VisaNet.Common.Resource.Presentation
@using VisaNet.Common.Security.Entities.Enums
@using VisaNet.Domain.EntitiesDtos.Enums
@using VisaNet.Presentation.Administration.MvcHtmlHelpers
@model VisaNet.Domain.EntitiesDtos.TableFilters.DebitRequestsFilterDto

@{
    ViewBag.Title = "Index";
}

<h2>Suscripción de Debito - Listado</h2>

<div class="row">
    <div class="col-md-4">
        <label>@PresentationAdminStrings.From</label>
        @Html.TextBoxFor(m => m.DateFrom, new { @class = "w100" })
    </div>

    <div class="col-md-4">
        <label>@PresentationAdminStrings.To</label>
        @Html.TextBoxFor(m => m.DateTo, new { @class = "w100" })
    </div>
    <div class="col-md-4">
        <label>@PresentationAdminStrings.Service_ServiceName_Debit</label>
        @Html.TextBoxFor(m => m.Service, new { @class = "form-control w100", autocomplete = "off" })
    </div>
</div>
<div class="row">
    <div class="col-md-4">
        <label>@PresentationAdminStrings.Email</label>
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control w100", autocomplete = "off" })
    </div>

    <div class="col-md-4">
        <label>@PresentationAdminStrings.Debit_type</label>
        <div class="selectMask w100">
            @Html.DropDownListFor(m => m.DebitType,
                EnumHelpers.ConvertToSelectList(typeof(DebitRequestTypeDto), EnumsStrings.ResourceManager),
                PresentationAdminStrings.Filters_PaymentType_Placeholder,
                new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "search_init form-control" } })
        </div>
    </div>
    <div class="col-md-4">
        <label>@PresentationAdminStrings.Debit_State</label>
        <div class="selectMask w100">
            @Html.DropDownListFor(m => m.DebitState,
                EnumHelpers.ConvertToSelectList(typeof(DebitRequestStateDto), EnumsStrings.ResourceManager),
                PresentationAdminStrings.Filters_PaymentType_Placeholder,
                new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "search_init form-control" } })
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-2">
        <a class="btn btn-default btn-standar mt10 w100" id="execute">@PresentationAdminStrings.Common_Search</a>
    </div>
    <div class="col-md-5">
        <button type="button" id="btnGenerateExcel" class="btn btn-default btn-standar mt10 w100 btn-export">@PresentationAdminStrings.Debit_ExportManualSynchronization</button>
    </div>
</div>
<div class="loadingMessaje hidden" id="loaderMessage">
    <div class="loading">@PresentationAdminStrings.Loading</div>
</div>

<div class="row">
    <div class="col-md-12">
        <h2></h2>
        <div class="table-responsive">
            <table class="table table-striped table-bordered table-hover tablesorter">
                <thead>
                    <tr>
                        <th>Fecha</th>
                        <th>Email</th>
                        <th>Tarjeta</th>
                        <th>Comercio Debito</th>
                        <th>Producto</th>
                        <th>Tipo</th>
                        <th>Estado</th>
                        <th>Detalle</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {

        function externalFilters(aoData) {
            aoData.push({ "name": "DateFrom", "value": $("#@Html.IdFor(m => m.DateFrom)").val() });
            aoData.push({ "name": "DateTo", "value": $("#@Html.IdFor(m => m.DateTo)").val() });
            aoData.push({ "name": "Name", "value": $("#@Html.IdFor(m => m.Service)").val() });
            aoData.push({ "name": "Email", "value": $("#@Html.IdFor(m => m.Email)").val() });
            aoData.push({ "name": "DebitState", "value": $("#@Html.IdFor(m => m.DebitState)").val() });
            aoData.push({ "name": "DebitType", "value": $("#@Html.IdFor(m => m.DebitType)").val() });
        }

        function drawTable() {
            dataTableFilters = applyDatatableExternalFilters($('table'),
            [0],
            [
            { "mDataProp": "CreationDate" },
            {
                "sName": "UserEmail",
                "sDefaultContent": "",
                "bSearchable": false,
                "bSortable": false,
                "fnRender": function (a) {
                    return "<a target='_blank' href='@Url.Action("Index", "ReportsUser")/Index?UserEmail=" + a.aData.UserEmail + "'>" + a.aData.UserEmail + "</a>";
                }
            },
            {
                "sName": "MaskedNumber",
                "sDefaultContent": "",
                "bSearchable": false,
                "bSortable": false,
                "fnRender": function (a) {
                    return "<a target='_blank' href='@Url.Action("Index", "ReportsCards")?Email=" + a.aData.UserEmail + "&CardMask=" + a.aData.MaskedNumber + "'>" + a.aData.MaskedNumber + "</a>";
                }
            },
            {
                "sName": "CommerceName",
                "sDefaultContent": "",
                "bSearchable": false,
                "bSortable": false,
                "fnRender": function (a) {
                    return "<a target='_blank' href='@Url.Action("Index", "DebitCommerce")/Index?CommerceName=" + a.aData.CommerceName + "'>" + a.aData.CommerceName + "</a>";
                }
            },
            {
                "mDataProp": "ProductName",
                "bSortable": false
            },
            {
                "mDataProp": "DebitType",
                "bSortable": false
            },
            { "mDataProp": "DebitState", "bSortable": false }
            ,
            {
                "sName": "Details",
                "sClass": "column-icon",
                "sDefaultContent": "",
                "bSearchable": false,
                "bSortable": false,
                "fnRender": function (oObj) {
                    return '@Html.ActionGridActionLink(Actions.DebitSuscriptionDetails, "<i class=\"fa fa-search\"></i>", new Dictionary<string, object> { { "Class", "btn-editar" } })';
                }
            }
            ],
            '@Url.Action("AjaxHandler", "DebitSuscription")', externalFilters, null, null);
        }

        $("#execute").click(function (e) {
            e.preventDefault();
            drawTable();
            dataTableFilters.fnFilter();
        });

        $('#btnGenerateExcel').click(function () {
            $.ajax({
                type: "GET",
                url: '@Url.Action("ExcelExport", "DebitSuscription")',
                success: function (data) {
                }
            });
        });

    });

</script>
