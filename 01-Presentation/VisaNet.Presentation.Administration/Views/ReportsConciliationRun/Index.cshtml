@using VisaNet.Common.Resource.Presentation
@model VisaNet.Domain.EntitiesDtos.TableFilters.ReportsConciliationRunFilterDto

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@PresentationAdminStrings.ReportsConciliationRun</h2>

@* FILTROS *@
<div class="row">
    <div class="col-md-3">
        <label>@PresentationAdminStrings.CreationDateFrom</label>
        @Html.EditorFor(m => m.CreationDateFrom, new { @class = "form-control w100" })
    </div>
    <div class="col-md-3">
        <label>@PresentationAdminStrings.CreationDateTo</label>
        @Html.EditorFor(m => m.CreationDateTo, new { @class = "form-control w100" })
    </div>
    <div class="col-md-3">
        <label>@PresentationAdminStrings.Reports_Conciliation_Application</label>
        <div class="selectMask w100">
            @Html.DropDownListFor(m => m.App, (IEnumerable<SelectListItem>)ViewBag.Apps, PresentationAdminStrings.Reports_Conciliation_All, new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "form-control" } })
        </div>
    </div>
    <div class="col-md-3">
        <label>@PresentationAdminStrings.Type</label>
        <div class="selectMask w100">
            @Html.DropDownListFor(m => m.IsManualRun, (IEnumerable<SelectListItem>)ViewBag.IsManualRun, PresentationAdminStrings.All, new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "form-control" } })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-3">
        <label>@PresentationAdminStrings.Reports_Conciliation_State</label>
        <div class="selectMask w100">
            @Html.DropDownListFor(m => m.State, (IEnumerable<SelectListItem>)ViewBag.States, PresentationAdminStrings.All, new Dictionary<string, object> { { "style", "width: 100%; height: 100%; color:#999" }, { "class", "form-control" } })
        </div>
    </div>
    <div class="col-md-3">
        <label>@PresentationAdminStrings.FileName</label>
        <div class="selectMask w100">
            @Html.TextBoxFor(m => m.InputFileName, new { @class = "form-control w100", @placeholder = "Ingrese el nombre de archivo a buscar", autocomplete = "off" })
        </div>
    </div>
    <div class="col-md-3">
        <label>@PresentationAdminStrings.ConciliationDateFrom</label>
        @Html.EditorFor(m => m.ConciliationDateFrom, new { @class = "form-control w100" })
    </div>
    <div class="col-md-3">
        <label>@PresentationAdminStrings.ConciliationDateTo</label>
        @Html.EditorFor(m => m.ConciliationDateTo, new { @class = "form-control w100" })
    </div>
</div>
<div class="row">
    <div class="col-md-2">
        <a class="btn btn-default btn-standar mt10 w100" id="execute">@PresentationAdminStrings.Common_Search</a>
    </div>
</div>

@* TABLA *@
<div class="row">
    <div class="col-lg-12">
        <h2></h2>
        <div class="table-responsive">
            <table id="table" class="table table-bordered table-striped table-hover tablesorter">
                <thead>
                    <tr>
                        <th>@PresentationAdminStrings.CreationDate</th>
                        <th>@PresentationAdminStrings.FinishDate</th>
                        <th>@PresentationAdminStrings.Reports_Conciliation_Application</th>
                        <th>@PresentationAdminStrings.Type</th>
                        <th>@PresentationAdminStrings.Reports_Conciliation_State</th>
                        <th>@PresentationAdminStrings.FileName</th>
                        <th>@PresentationAdminStrings.ConciliationDateFrom</th>
                        <th>@PresentationAdminStrings.ConciliationDateTo</th>
                        <th>@PresentationAdminStrings.Details</th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
    </div>
</div>

@* MODAL *@
<div id="divDetailsModal"></div>

<script type="text/javascript">

    $(document).ready(function () {

        var dataTableFilters;

        function externalFilters(aoData) {
            aoData.push({ "name": "CreationDateFrom", "value": $("#@Html.IdFor(m => m.CreationDateFrom)").val() });
            aoData.push({ "name": "CreationDateTo", "value": $("#@Html.IdFor(m => m.CreationDateTo)").val() });
            aoData.push({ "name": "App", "value": $("#@Html.IdFor(m => m.App)").val() });
            aoData.push({ "name": "IsManualRun", "value": $("#@Html.IdFor(m => m.IsManualRun)").val() });
            aoData.push({ "name": "State", "value": $("#@Html.IdFor(m => m.State)").val() });
            aoData.push({ "name": "InputFileName", "value": $("#@Html.IdFor(m => m.InputFileName)").val() });
            aoData.push({ "name": "ConciliationDateFrom", "value": $("#@Html.IdFor(m => m.ConciliationDateFrom)").val() });
            aoData.push({ "name": "ConciliationDateTo", "value": $("#@Html.IdFor(m => m.ConciliationDateTo)").val() });
        }

        function drawTable() {
            dataTableFilters = applyDatatableExternalFilters($('#table'), null,
                [
                    { "mDataProp": "CreationDate", "bSortable": true },
                    { "mDataProp": "LastModificationDate", "bSortable": false },
                    { "mDataProp": "App", "bSortable": true },
                    { "mDataProp": "RunType", "bSortable": true },
                    { "mDataProp": "State", "bSortable": true },
                    { "mDataProp": "InputFileName", "bSortable": true },
                    { "mDataProp": "ConciliationDateFrom", "bSortable": true },
                    { "mDataProp": "ConciliationDateTo", "bSortable": true },
                    {
                        "sName": "Details",
                        "sClass": "column-icon",
                        "sDefaultContent": "",
                        "bSearchable": false,
                        "bSortable": false,
                        "fnRender": function (oObj) {
                            if (oObj.aData.Id === '') {
                                return '';
                            }
                            return "<a href='#' class='btn-details' data-id='" + oObj.aData.Id + "'><i class=\"fa fa-search\"></i></a>";
                        }
                    }
                ],
                '@Url.Action("AjaxHandler", "ReportsConciliationRun")',
                externalFilters, null,
                [[0, "desc"]]);
        }

        $("#execute").click(function (e) {
            e.preventDefault();
            drawTable();
            dataTableFilters.fnFilter();
        });

        $("#table").on("click", ".btn-details", function (e) {
            e.preventDefault();
            var id = $(this).data("id");
            $("#divDetailsModal").html('');
            $.ajax({
                method: 'GET',
                url: '@Url.Action("DetailsModal", "ReportsConciliationRun")' + "?id=" +id,
                async: true,
                dataType: "html",
                success: function (data) {
                    $("#divDetailsModal").html(data);
                    $("#lbDetails").modal('show');
                },
                error: function (err) {
                    ShowNotification('Error', 'Ha ocurrido un error inesperado.', 'error');
                }
            });
        });

    });

</script>